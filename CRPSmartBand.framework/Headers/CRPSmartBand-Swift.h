#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef CRPSMARTBAND_SWIFT_H
#define CRPSMARTBAND_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import CoreFoundation;
@import CoreLocation;
@import Dispatch;
@import Foundation;
@import OTAFramework;
@import ObjectiveC;
@import RTKOTASDK;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CRPSmartBand",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
enum AlarmType : NSInteger;

SWIFT_CLASS("_TtC12CRPSmartBand10AlarmModel")
@interface AlarmModel : NSObject
@property (nonatomic) NSInteger id;
@property (nonatomic) NSInteger enable;
@property (nonatomic) enum AlarmType type;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger minute;
@property (nonatomic) NSInteger year;
@property (nonatomic) NSInteger month;
@property (nonatomic) NSInteger day;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull weekday;
- (nonnull instancetype)initWithId:(NSInteger)id enable:(NSInteger)enable type:(enum AlarmType)type hour:(NSInteger)hour minute:(NSInteger)minute year:(NSInteger)year month:(NSInteger)month day:(NSInteger)day weekday:(NSArray<NSNumber *> * _Nonnull)weekday OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, AlarmType, open) {
  AlarmTypeOnce = 0,
  AlarmTypeEveryday = 1,
  AlarmTypeWeekly = 2,
};

@class NSData;
@class NSString;

SWIFT_CLASS("_TtC12CRPSmartBand6Binary")
@interface Binary : NSObject
@property (nonatomic) NSInteger readingOffset;
- (nonnull instancetype)initWithBytes:(NSArray<NSNumber *> * _Nonnull)bytes OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull bytes;
- (nonnull instancetype)initWithData:(NSData * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)bit:(NSInteger)position SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)bits:(NSRange)range SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)bits:(NSInteger)start :(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)byte:(NSInteger)position SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)bytes:(NSInteger)start :(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getBytes:(NSInteger)start :(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getCount:(NSInteger)position SWIFT_WARN_UNUSED_RESULT;
- (uint32_t)getUInt32:(NSInteger)start SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getBytesBE:(NSInteger)start :(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (int32_t)getInt32BE:(NSInteger)start :(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (int32_t)getGPSInt32BE:(NSInteger)start :(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (void)putDataWithData:(NSData * _Nonnull)data;
- (void)putUInt8:(uint8_t)value;
- (void)putUInt16:(uint32_t)value;
- (NSInteger)getUInt8:(NSInteger)start SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getUInt16BE:(NSInteger)start SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getUInt16LE:(NSInteger)start SWIFT_WARN_UNUSED_RESULT;
- (BOOL)bitsWithInternalOffsetAvailable:(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)nextWithBits:(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (BOOL)bytesWithInternalOffsetAvailable:(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)nextWithBytes:(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
+ (uint8_t)Int8:(NSArray<NSNumber *> * _Nonnull)bits SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSNumber *> * _Nonnull)intToUint8:(NSInteger)number SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)hexTodecWithNumber:(NSString * _Nonnull)num SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class CBPeripheral;
@class CBCharacteristic;
@class CBCentralManager;

/// easy protocol, to use ble
SWIFT_PROTOCOL("_TtP12CRPSmartBand11BleProtocol_")
@protocol BleProtocol
@optional
- (void)didDiscover:(NSString * _Nonnull)name rssi:(NSNumber * _Nonnull)rssi;
- (void)didConnect;
- (void)didSyncing;
- (void)didDisconnect;
- (void)didBleReady;
- (void)didReadRSSI:(NSNumber * _Nonnull)rssi;
- (void)didConnected;
- (void)didDiscoverCharacteristics:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)stateChange:(CBCentralManager * _Nonnull)central;
@end


SWIFT_CLASS("_TtC12CRPSmartBand20CRPAutoLockTimeModel")
@interface CRPAutoLockTimeModel : NSObject
@property (nonatomic) NSInteger AutoLockTime;
@property (nonatomic) NSInteger isSupportAlwaysBright;
- (nonnull instancetype)initWithAutoLockTime:(NSInteger)AutoLockTime isSupportAlwaysBright:(NSInteger)isSupportAlwaysBright OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand16CRPBPRecordModel")
@interface CRPBPRecordModel : NSObject
@property (nonatomic) NSInteger SBP;
@property (nonatomic) NSInteger DBP;
@property (nonatomic) NSInteger time;
- (nonnull instancetype)initWithSBP:(NSInteger)SBP DBP:(NSInteger)DBP time:(NSInteger)time OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CBUUID;
@class NSTimer;
@class CBService;
@class CRPDiscovery;
enum CRPError : NSInteger;
@class NSUUID;

SWIFT_CLASS("_TtC12CRPSmartBand6CRPBle")
@interface CRPBle : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CBUUID * _Nonnull wechatServiceUUID;)
+ (CBUUID * _Nonnull)wechatServiceUUID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CBUUID * _Nonnull enServiceUUID;)
+ (CBUUID * _Nonnull)enServiceUUID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CBUUID * _Nonnull ttServiceUUID;)
+ (CBUUID * _Nonnull)ttServiceUUID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CBUUID * _Nonnull mh08ServiceUUID;)
+ (CBUUID * _Nonnull)mh08ServiceUUID SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull commandCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull otas_rx_dat_uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull otas_rx_cmd_uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull otas_rx_isp_cmd_uuid;
@property (nonatomic, strong) dispatch_queue_t _Nonnull OTAWirteQueue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CRPBle * _Nonnull sharedInstance;)
+ (CRPBle * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) uint8_t bright;
@property (nonatomic) uint8_t color;
@property (nonatomic) NSInteger MTULength;
@property (nonatomic, strong) id <BleProtocol> _Nullable delegate;
@property (nonatomic, readonly, copy) NSArray<CBUUID *> * _Nonnull DFUUID;
@property (nonatomic, strong) NSTimer * _Nullable rescanTimer;
@property (nonatomic, strong) NSTimer * _Nullable rssiTimer;
@property (nonatomic, strong) CBCentralManager * _Null_unspecified centralManager;
@property (nonatomic, strong) CBPeripheral * _Nullable myperipheral;
@property (nonatomic, strong) CBCharacteristic * _Nullable mychar;
@property (nonatomic, strong) CBService * _Nullable myservice;
@property (nonatomic) BOOL isKeepConnect;
@property (nonatomic) BOOL isConnect;
@property (nonatomic) BOOL busy;
@property (nonatomic) BOOL initIsInvocked;
- (BOOL)initIsInvocked SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// 是否包含DIS的服务
@property (nonatomic) BOOL isHasGetDIS;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)scanWithDuration:(NSTimeInterval)duration progressHandler:(void (^ _Nullable)(NSArray<CRPDiscovery *> * _Nonnull))progressHandler completionHandler:(void (^ _Nullable)(NSArray<CRPDiscovery *> * _Nullable, enum CRPError))completionHandler;
/// stop scan ble device
- (void)breakScan;
- (void)interruptScan;
- (void)disConnect;
- (void)disConnectOnce;
/// connect a peripheral
- (void)connect:(CBPeripheral * _Nonnull)peripheral;
- (void)managerRetrievePeripheral:(CBPeripheral * _Nonnull)peripheral;
/// send one byte to connected peripheral
/// \param value one byte data will send
///
- (void)sendByte:(uint8_t)value;
/// send String to connected peripheral
/// \param value -> a string will send
///
- (void)sendString:(NSString * _Nonnull)value;
/// send data to control a car
/// \param left left speed
///
/// \param right right speed
///
- (void)sendRunCommandWithLeft:(int8_t)left right:(int8_t)right;
/// append new find peripheral to peripherals and update rssi
/// \param peripheral 
///
/// \param RSSI 
///
- (void)appendPeripheral:(CBPeripheral * _Nonnull)peripheral RSSI:(NSNumber * _Nonnull)RSSI;
/// return the max rssi peripheral tin peripherals
///
/// returns:
/// peripheral with best rssi or nil
- (CBPeripheral * _Nullable)getMaxPeripheral SWIFT_WARN_UNUSED_RESULT;
- (NSArray<CBPeripheral *> * _Nonnull)retrievePeripheralsWithIdentifier:(NSUUID * _Nonnull)identifier SWIFT_WARN_UNUSED_RESULT;
- (NSArray<CBPeripheral *> * _Nonnull)connectedPeripherial SWIFT_WARN_UNUSED_RESULT;
/// read rssi every seconds
- (void)updateRSSI;
- (void)writeData:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic data:(NSData * _Nonnull)data type:(CBCharacteristicWriteType)type;
- (void)OTAwirteQueue:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic data:(NSData * _Nonnull)data type:(CBCharacteristicWriteType)type timeInterval:(NSTimeInterval)timeInterval index:(NSInteger)index;
- (void)writeOTAData:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic data:(NSData * _Nonnull)data type:(CBCharacteristicWriteType)type;
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central willRestoreState:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didRetrievePeripherals:(CBPeripheral * _Nonnull)peripherals;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didReadRSSI:(NSNumber * _Nonnull)RSSI error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
@end

typedef SWIFT_ENUM(NSInteger, CRPBluetoothState, open) {
  CRPBluetoothStateUnknown = 0,
  CRPBluetoothStateResetting = 1,
  CRPBluetoothStateUnsupported = 2,
  CRPBluetoothStateUnauthorized = 3,
  CRPBluetoothStatePoweredOff = 4,
  CRPBluetoothStatePoweredOn = 5,
};


SWIFT_CLASS("_TtC12CRPSmartBand18CRPBrightnessModel")
@interface CRPBrightnessModel : NSObject
@property (nonatomic) NSInteger brightness;
@property (nonatomic) NSInteger maxBrightness;
- (nonnull instancetype)initWithBrightness:(NSInteger)brightness maxBrightness:(NSInteger)maxBrightness OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;

SWIFT_CLASS("_TtC12CRPSmartBand10CRPContact")
@interface CRPContact : NSObject
@property (nonatomic, readonly) NSInteger contactID;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@property (nonatomic, readonly, strong) UIImage * _Nonnull image;
@property (nonatomic, readonly, copy) NSString * _Nonnull selectPhoneNumber;
- (nonnull instancetype)initWithContactID:(NSInteger)contactID fullName:(NSString * _Nonnull)fullName image:(UIImage * _Nonnull)image phoneNumber:(NSString * _Nonnull)phoneNumber OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;
@class NSURLSessionTask;
@class NSHTTPURLResponse;
@class NSURLRequest;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSInputStream;

/// The task delegate is responsible for handling all delegate callbacks for the underlying task as well as
/// executing all operations attached to the serial operation queue upon task completion.
SWIFT_CLASS("_TtC12CRPSmartBand15CRPTaskDelegate")
@interface CRPTaskDelegate : NSObject
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSessionDataTask;
@class NSURLResponse;
@class NSURLSessionDownloadTask;
@class NSCachedURLResponse;

SWIFT_CLASS("_TtC12CRPSmartBand19CRPDataTaskDelegate")
@interface CRPDataTaskDelegate : CRPTaskDelegate <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didBecomeDownloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

enum CRPPlatform : NSInteger;

SWIFT_CLASS("_TtC12CRPSmartBand12CRPDiscovery")
@interface CRPDiscovery : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable localName;
@property (nonatomic, copy) NSString * _Nullable kCABAdvidataLocalName;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull advertisementData;
/// The remote peripheral that was discovered.
@property (nonatomic, readonly, strong) CBPeripheral * _Nonnull remotePeripheral;
@property (nonatomic, readonly) NSInteger RSSI;
@property (nonatomic, copy) NSString * _Nullable mac;
/// 从广播数据中读取的版本号
@property (nonatomic, copy) NSString * _Nonnull ver;
/// 从广播数据中读取的平台  0:null, 1:Nordic, 2: Huntersun 3:RealTek, 4:Goodix 5.Sifli 6：JL
@property (nonatomic) enum CRPPlatform platform;
@property (nonatomic) NSInteger chip;
@property (nonatomic) BOOL isPair;
@property (nonatomic) BOOL isTalk;
@property (nonatomic) BOOL scan_code_bind;
- (nonnull instancetype)initWithAdvertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData remotePeripheral:(CBPeripheral * _Nonnull)remotePeripheral RSSI:(NSInteger)RSSI OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRemotePeripheral:(CBPeripheral * _Nonnull)remotePeripheral mac:(NSString * _Nonnull)mac OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURL;

SWIFT_CLASS("_TtC12CRPSmartBand23CRPDownloadTaskDelegate")
@interface CRPDownloadTaskDelegate : CRPTaskDelegate <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
@end

typedef SWIFT_ENUM(NSInteger, CRPDrinkWaterSource, open) {
  CRPDrinkWaterSourceApp = 0,
  CRPDrinkWaterSourceWatch = 1,
};


SWIFT_CLASS("_TtC12CRPSmartBand8CRPECard")
@interface CRPECard : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull url;
- (nonnull instancetype)initWithId:(NSInteger)id title:(NSString * _Nonnull)title url:(NSString * _Nonnull)url OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand20CRPEcardProfileModel")
@interface CRPEcardProfileModel : NSObject
@property (nonatomic, readonly) NSInteger eCardMax;
@property (nonatomic, readonly) NSInteger eCardURLLimit;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull ids;
- (nonnull instancetype)initWithECardMax:(NSInteger)eCardMax eCardURLLimit:(NSInteger)eCardURLLimit ids:(NSArray<NSNumber *> * _Nonnull)ids OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand19CRPEmergencyContact")
@interface CRPEmergencyContact : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull phoneNumber;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name phoneNumber:(NSString * _Nonnull)phoneNumber OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, CRPError, open) {
  CRPErrorNone = 0,
  CRPErrorDisconnected = 1,
  CRPErrorBusy = 2,
  CRPErrorTimeout = 3,
  CRPErrorInterrupted = 4,
  CRPErrorInternalError = 5,
  CRPErrorNoCentralManagerSet = 6,
  CRPErrorOther = 7,
};


SWIFT_CLASS("_TtC12CRPSmartBand25CRPExerciseGoalStateModel")
@interface CRPExerciseGoalStateModel : NSObject
@property (nonatomic) NSInteger state;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull weekday;
- (nonnull instancetype)initWithState:(NSInteger)state weekday:(NSArray<NSNumber *> * _Nonnull)weekday OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand21CRPExerciseGoalsModel")
@interface CRPExerciseGoalsModel : NSObject
@property (nonatomic) NSInteger step;
@property (nonatomic) NSInteger kcal;
@property (nonatomic) NSInteger distance;
@property (nonatomic) NSInteger exerciseTime;
- (nonnull instancetype)initWithStep:(NSInteger)step kcal:(NSInteger)kcal distance:(NSInteger)distance exerciseTime:(NSInteger)exerciseTime OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, CRPFeature, open) {
  CRPFeatureHR = 0,
  CRPFeatureBP = 1,
  CRPFeatureWeather = 2,
};

typedef SWIFT_ENUM(uint8_t, CRPGPTReplyState, open) {
  CRPGPTReplyStateReady = 0x02,
  CRPGPTReplyStateNoNetWork = 0x0B,
  CRPGPTReplyStateNomMcrophone = 0x09,
  CRPGPTReplyStateChatgptAPIFail = 0x0C,
  CRPGPTReplyStateSpeechFail = 0x0A,
};

typedef SWIFT_ENUM(NSInteger, CRPGPTRequestState, open) {
  CRPGPTRequestStateReady = 0,
  CRPGPTRequestStateCancel = 1,
  CRPGPTRequestStateParseFail = 2,
  CRPGPTRequestStateParseSuccess = 3,
};

typedef SWIFT_ENUM(NSInteger, CRPGPTType, open) {
  CRPGPTTypeNone = 0,
  CRPGPTTypeChat = 1,
  CRPGPTTypeAiWatchFace = 2,
};

typedef SWIFT_ENUM(NSInteger, CRPGoodixChip, open) {
  CRPGoodixChipNone = 0,
  CRPGoodixChipGR_5515 = 1,
  CRPGoodixChipGR_5525 = 2,
  CRPGoodixChipGR_5526 = 3,
};


SWIFT_CLASS("_TtC12CRPSmartBand15CRPHRVDataModel")
@interface CRPHRVDataModel : NSObject
@property (nonatomic) double time;
@property (nonatomic) NSInteger sportLevel;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull detail;
- (nonnull instancetype)initWithTime:(double)time sportLevel:(NSInteger)sportLevel detail:(NSArray<NSNumber *> * _Nonnull)detail OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand17CRPHRVRecordModel")
@interface CRPHRVRecordModel : NSObject
@property (nonatomic) NSInteger value;
@property (nonatomic) NSInteger time;
- (nonnull instancetype)initWithValue:(NSInteger)value time:(NSInteger)time OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand19CRPHeartRecordModel")
@interface CRPHeartRecordModel : NSObject
@property (nonatomic) NSInteger value;
@property (nonatomic) NSInteger time;
- (nonnull instancetype)initWithValue:(NSInteger)value time:(NSInteger)time OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, CRPHuntersunChip, open) {
  CRPHuntersunChipNone = 0,
  CRPHuntersunChipHS_6620D_A3 = 1,
  CRPHuntersunChipHS_6620D_A4 = 2,
  CRPHuntersunChipHS_6621 = 3,
};

typedef SWIFT_ENUM(NSInteger, CRPJieLiChip, open) {
  CRPJieLiChipNone = 0,
  CRPJieLiChipJL_701n = 1,
};

enum CRPState : NSInteger;
@class SleepModel;
@class StepModel;
@class ProfileModel;
@class SportModel;
@class periodTimeModel;
@class ScreenContent;
@class ScreenImageSize;
@class watchFaceSupportModel;
@class CRPNewWatchFaceSupportModel;
@class Physiological;
@class SitRemindModel;
@class hrRemind;
@class eventRemind;
@class drinkWaterRemind;
@class contactProfileModel;
@class CRPO2RecordModel;
@class CRPNewSportModel;
@class CRPStressRecordModel;
@class CRPSleepDetectionInfo;
@class CRPPlatformModel;
@class CRPScreenMarketVersionModel;
@class CRPWorldClockProfileModel;
@class CRPWorldClockModel;
@class CRPNewDrinkWaterRecord;
@class CRPNewDrinkWaterRemind;
enum GPTShowType : NSInteger;

SWIFT_CLASS("_TtC12CRPSmartBand18CRPManagerHandlers")
@interface CRPManagerHandlers : NSObject
@property (nonatomic, copy) void (^ _Null_unspecified bindHandler)(enum CRPState, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified removeHandler)(enum CRPState, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified batteryHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified goalHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified dominantHandHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified dialHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified languageHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified remindersToMoveHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified quickViewHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified unitHandles)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified timeformatHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified heart24IntervalHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified upgradeTypeHandlers)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified viewsHandlers)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified hearts24Handlers)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified yesterdayHearts24Handler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified fulldayheartHandler)(NSArray<NSNumber *> * _Nonnull, NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified steps24Handlers)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified yesterdaySteps24Handlers)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified supportLanguagesHandlers)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified macHandlers)(NSString * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified softverHandlets)(NSString * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified sleepHandler)(SleepModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified sleepWithREMHandler)(SleepModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified stepHandler)(StepModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified allDataHandler)(NSArray<StepModel *> * _Nonnull, NSArray<SleepModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified allDataWithREMHandler)(NSArray<StepModel *> * _Nonnull, NSArray<SleepModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified featuresHandler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified profileHandler)(ProfileModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified alarmHandler)(NSArray<AlarmModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified notificationsHandler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified sportHandler)(NSArray<SportModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified qvtimeHandler)(periodTimeModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified dstimeHandler)(periodTimeModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified isupgradeHandler)(NSString * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified screenContentHandler)(ScreenContent * _Nonnull, ScreenImageSize * _Nonnull, NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified connectedPeripherialHandler)(NSArray<CBPeripheral *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified watchFaceSupportHandler)(watchFaceSupportModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified newWatchFaceSupportHandler)(CRPNewWatchFaceSupportModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified HTXOTAMACHandler)(NSString * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified physiologicalHandler)(Physiological * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified sitRemindHandler)(SitRemindModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified temperature24Handler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified todayTemperatureHandler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified yesterdayTemperatureHandler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified hrRemindHandler)(hrRemind * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified autoLockTimeHandler)(CRPAutoLockTimeModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified handWashHandler)(eventRemind * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified drinkWaterHandler)(drinkWaterRemind * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified temperatureUnitHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified autoO2IntervalHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified todayAutoO2Handler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified yesterdayAutoO2Handler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified contactProfileHeandler)(contactProfileModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified hrvIntercalHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified hrvCountHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified hrvDataHandler)(CRPHRVDataModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified isPowerSaveHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified contactCountHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified fullDayO2StatusHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified fullDayBPStatusHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified fullDayTemperatureStatusHanler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified fullDayO2DataHanler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified fullDayBPDataHanler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified fullDayTemperatureDataHanler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified heartRecordDataHandler)(NSArray<CRPHeartRecordModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified bpRecordDataHandler)(NSArray<CRPBPRecordModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified o2RecordDataHandler)(NSArray<CRPO2RecordModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified tapToWakeHandeler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified sportDetailHandler)(CRPNewSportModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified contactSupportVerHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified talkBluetoothStateHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified talkBluetoothNameHandler)(NSString * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified notificationsSupportHandler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified notificationsStateHanlder)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified newVerAlarmHandler)(NSArray<AlarmModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified stressRecordDataHandler)(NSArray<CRPStressRecordModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified stressIsSupportHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified hrvRecordDataHandler)(NSArray<CRPHRVRecordModel *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified hrvIsSupportHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified normalExerciseGoalHandler)(CRPExerciseGoalsModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified exerciseDayGoalHandler)(CRPExerciseGoalsModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified exerciseStateHandler)(CRPExerciseGoalStateModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified eCardProfileHandler)(CRPEcardProfileModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified eCardInfoHandler)(CRPECard * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified gpsDataHandler)(NSInteger, NSArray<NSValue *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified vibrationStrengthHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified sleepDetectionInfoHandler)(CRPSleepDetectionInfo * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified cals24Handlers)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified yesterdayCals24Handlers)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified distances24Handlers)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified yesterdayDistances24Handlers)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified todayAutoStressHandler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified yesterdayAutoStressHandler)(NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified autoStressIntervalHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified udtMaxSizeHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified historyStpeHander)(NSInteger, StepModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified historySleepHandler)(NSInteger, SleepModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified historyHrHandler)(NSInteger, NSArray<NSNumber *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified bandModeHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified platformInfoHandler)(CRPPlatformModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified screenMarketVersionInfoHandler)(CRPScreenMarketVersionModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified worldClockProfileHandler)(CRPWorldClockProfileModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified worldClockInfoHandler)(CRPWorldClockModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified brightnessInfoHandler)(CRPBrightnessModel * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified emergencyContactHandler)(CRPEmergencyContact * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified drinkWaterGoalHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified drinkWaterTotalIntakeHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified drinkWaterRecordHandler)(NSArray<CRPNewDrinkWaterRecord *> * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified newDrinkWaterRemindHandler)(CRPNewDrinkWaterRemind * _Nonnull, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified sosSwitchHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified stockSupportCountHandler)(NSInteger, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified gptSupportTypeHandler)(enum GPTShowType, enum CRPError);
@property (nonatomic, copy) void (^ _Null_unspecified gptScreenContentHandler)(ScreenContent * _Nonnull, ScreenImageSize * _Nonnull, NSInteger, enum CRPError);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CommandPacket;
@protocol CRPManagerDelegate;
@class CRPMedicineReminderModel;

SWIFT_CLASS("_TtC12CRPSmartBand10CRPManager")
@interface CRPManager : CRPManagerHandlers <BleProtocol>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CRPManager * _Nonnull sharedInstance;)
+ (CRPManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull batteryCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull sportCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull commandCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull transmitCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull softVerCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull heartRateCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull macCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull enMacCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull upgradeCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull isUpgradeCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull uiCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull newVersionCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull ecgCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull newECGCharacteristicUUID;
@property (nonatomic, readonly, copy) NSString * _Nonnull otas_tx_dat_uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull otas_rx_dat_uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull otas_rx_cmd_uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull otas_tx_cmd_uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull otas_tx_isp_cmd_uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull otas_rx_isp_cmd_uuid;
@property (nonatomic, strong) CommandPacket * _Null_unspecified commandPacket;
@property (nonatomic, strong) CBPeripheral * _Null_unspecified peripheral;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified sportCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified batteryCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified transmitCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified commandCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified softVerCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified macAddressCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified heartRateCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified upgradeCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified isUpgradeCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified ecgCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified newECGCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified uiCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified newVersionCharacteristic;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified ota_tx_dat_charac;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified ota_tx_cmd_charac;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified ota_rx_dat_charac;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified ota_rx_cmd_charac;
@property (nonatomic, strong) CBCharacteristic * _Null_unspecified ota_rx_isp_cmd_charac;
@property (nonatomic) NSInteger battery;
@property (nonatomic, copy) NSString * _Nonnull ver;
@property (nonatomic) BOOL isV2;
@property (nonatomic) BOOL isV3;
@property (nonatomic, copy) NSArray<StepModel *> * _Nonnull allSteps;
@property (nonatomic, copy) NSArray<SleepModel *> * _Nonnull allSleeps;
@property (nonatomic, copy) NSArray<SleepModel *> * _Nonnull allREMSleeps;
@property (nonatomic) BOOL isHTXOTA;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull ecgData;
@property (nonatomic) BOOL dataFullFlag;
@property (nonatomic) BOOL ecgOutsend;
@property (nonatomic) BOOL isNewECG;
@property (nonatomic) BOOL filterEmpty;
@property (nonatomic) BOOL ecgStartByApp;
@property (nonatomic, strong) dispatch_queue_t _Nonnull wirteQueue;
@property (nonatomic) NSInteger pkgSize;
- (void)connectTimerElapsed;
@property (nonatomic, strong) id <CRPManagerDelegate> _Null_unspecified delegate;
@property (nonatomic) enum CRPState state;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)connect:(CRPDiscovery * _Nonnull)discovery;
- (void)retrieveConnectWithIdentifier:(NSString * _Nonnull)identifier mac:(NSString * _Nonnull)mac;
- (void)bindedPeripheral:(CRPDiscovery * _Nonnull)discovery;
- (void)unbind;
- (void)checkIsBind;
- (void)disConnect;
- (void)readPedometer;
- (void)readBattery;
- (void)readMacAddress;
- (void)readSoftver;
- (void)readIsUpgrade;
- (void)readGoal;
- (void)readRgihtHand;
- (void)readAlarmList;
- (void)readProfile;
- (void)readSleepData;
- (void)readNotificationList;
- (void)readNotificationMore;
- (void)readConfigUnit;
- (void)readQuickView;
- (void)readTimeformat;
- (void)readDial;
- (void)readLanguage;
- (void)readAgoData:(NSInteger)num;
- (void)readSitRemind;
- (void)read24HourHeartsInterval;
- (void)read24HourHearts:(NSInteger)i;
- (void)readFullDayHearts:(NSInteger)i;
- (void)readConfigAutoLEDTime;
- (void)readDisturbTime;
- (void)sendStartHeart;
- (void)sendStopHeart;
- (void)writeWeather:(NSInteger)type weather:(NSString * _Nonnull)weather temp:(NSInteger)temp pm25:(NSInteger)pm25 city:(NSString * _Nonnull)city forecast:(NSArray<NSArray<NSString *> *> * _Nonnull)forecast;
- (void)sendFindBand;
- (void)sendDFUUpgrade:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)sendUIUpgrade:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)sendScreen:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)sendScreenContent:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)readScreenContent;
- (void)sendAutoLED:(BOOL)isOn;
- (void)sendConfigTimeSystem:(NSInteger)type;
- (void)sendCalibration;
- (void)sendTime:(NSInteger)timestamp;
- (void)sendTimeZone;
- (void)sendRgihtHand:(NSInteger)type;
- (void)sendSkin:(NSInteger)skin;
- (void)sendUnit:(NSInteger)iunit;
- (void)sendConfigNotification:(NSArray<NSNumber *> * _Nonnull)switchs;
- (void)sendNotificationMore:(NSInteger)status;
- (void)sendSitRemind:(BOOL)isOn;
- (void)sendAlarm:(NSArray<NSNumber *> * _Nonnull)alarm;
- (void)sendProfile:(NSArray<NSNumber *> * _Nonnull)profile;
- (void)sendGoal:(NSInteger)goal;
- (void)sendLanguage:(NSInteger)lang;
- (void)sendStartBlood:(NSInteger)heartRate :(NSInteger)SBP :(NSInteger)DBP;
- (void)sendStopBlood;
- (void)sendStartDyHeart;
- (void)sendStopDyHeart;
- (void)sendSport:(NSInteger)state;
- (void)sendSingleHeartStart;
- (void)sendSingleHeartStop;
- (void)readSport;
- (void)sendStartSpO2;
- (void)sendStopSpO2;
- (void)readHeartData;
- (void)sendReceivedHeartData:(NSInteger)time;
- (void)readViews;
- (void)sendViews:(NSArray<NSNumber *> * _Nonnull)views;
- (void)send24HourHearts:(NSInteger)interval;
- (void)sendMessage:(NSString * _Nonnull)message;
- (void)sendSystemLocal:(NSInteger)lang;
- (void)sendWeather:(NSData * _Nonnull)data;
- (void)sendNewWeather:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)sendStepLength:(NSInteger)length;
- (void)sendQVTimeWithTime:(periodTimeModel * _Nonnull)time;
- (void)sendDsTimeWithTime:(periodTimeModel * _Nonnull)time;
- (void)readScreenSupportModel;
- (void)sendScreenMarket:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)sendPair;
- (void)switchCameraView;
- (void)shutDown;
- (void)drinkRemind;
- (void)getOTAMac;
- (void)startOTA;
- (void)read24HoursStep:(NSInteger)i;
- (void)readConfig24temperature;
- (void)read24temperature:(NSInteger)i;
- (void)sendPhysiologicalRemind:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)readPhysiologicalRemind;
- (void)startEcg;
- (void)stopEcg;
- (void)ecgReady;
- (void)ecgOut;
- (void)ecgHeartWithHeart:(NSInteger)heart;
- (void)getEcgData;
- (void)readSitRemindInfo;
- (void)sendSitRemindInfoWithModel:(SitRemindModel * _Nonnull)model;
- (void)stopFindPhone;
- (void)sendFindingPhone;
- (void)sendDrinkWaterRemind:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)readDrinkWaterRemind;
- (void)sendHeartRateRemind:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)readHeartRateRemind;
- (void)sendHandWashRemind:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)readHandWashRemind;
- (void)readAutoLockTime;
- (void)sendAutoLockTime:(NSInteger)time;
- (void)sendTemperature:(NSInteger)type;
- (void)sendAutoTemperature:(BOOL)open;
- (void)sendCityName:(NSString * _Nonnull)city;
- (void)sendFirstConnect;
- (void)readTemperatureUnit;
- (void)sendTemperatureUnit:(NSInteger)unit;
- (void)sendAutoO2Status:(NSInteger)interval;
- (void)readAutoO2Status;
- (void)readAutoO2:(NSInteger)i;
- (void)sendCleanAllContact;
- (void)readContact;
- (void)sendAddContactWithContact:(CRPContact * _Nonnull)contact;
- (void)sendContactAvatarWithId:(NSInteger)id size:(NSArray<NSNumber *> * _Nonnull)size;
- (void)deleteContactWithId:(NSInteger)id;
- (void)checkUpgradeType;
- (void)setHRV:(NSInteger)interval;
- (void)getHRVInterval;
- (void)getHRVCount:(NSInteger)dayIndex;
- (void)getHRVData:(NSInteger)dayIndex index:(NSInteger)index;
- (void)startHRVMeasure;
- (void)stopHRVMeasure;
- (void)checkPowerSaveState;
- (void)setPowerSaveStateWithOpen:(BOOL)open;
- (void)readContactCount;
- (void)readContactSupportVer;
- (void)readUDTMaxSize;
- (void)notifyBTDisconnect;
- (void)readDeviceInfo;
- (void)readTestMode;
- (void)sendUserMode;
- (NSData * _Nonnull)addZeroWithData:(NSData * _Nonnull)data count:(NSInteger)count SWIFT_WARN_UNUSED_RESULT;
- (void)reset;
- (void)exitCameraView;
- (void)sendFullDayO2StatusWithOpen:(BOOL)open;
- (void)readFullDayO2Status;
- (void)readFullDayO2:(NSInteger)i;
- (void)sendFullDayBPStatusWithOpen:(BOOL)open;
- (void)readFullDayBPStatus;
- (void)readFullDayBP:(NSInteger)i;
- (void)sendFullDayTemperatureStatusWithOpen:(BOOL)open;
- (void)readFullDayTemperatureStatus;
- (void)readFullDayTemperature:(NSInteger)i;
- (void)setMedicineWithMedicine:(CRPMedicineReminderModel * _Nonnull)medicine;
- (void)deleteMedicineWithId:(NSInteger)id;
- (void)deleteAllMedicine;
- (void)readMedicineCount;
/// 查询心率历史记录
- (void)readHeartRecord;
/// 查询心率历史记录
- (void)readBPRecord;
/// 查询心率历史记录
- (void)readO2Record;
/// 设置屏幕轻触唤醒
- (void)sendTapToWake:(BOOL)open;
/// 屏幕轻触唤醒查询
- (void)readTapToWakeState;
/// 获取新版本锻炼记录列表
- (void)readSportRecordList;
/// 根据ID获取相应锻炼记录数据
- (void)readSportRecordDataWithId:(NSInteger)id;
/// 根据ID和offset获取相应的锻炼心率数据
- (void)readSportRecordHRWithId:(NSInteger)id offset:(NSInteger)offset;
/// 获取通话蓝牙连接状态
- (void)readTalkBluetoothConnectState;
/// 设置A2DP控制开关
- (void)sendA2DPControl:(NSInteger)state;
/// 获取通话蓝牙名称
- (void)readTalkBluetoothName;
/// 获取蓝牙协议版本
- (void)readManufacturerNameByCommand;
/// 获取当前版本升级状态
- (void)readUpdateStateByCommand;
///
- (void)readSoftVerByCommand;
- (void)connectConfirm:(NSArray<NSNumber *> * _Nonnull)data;
- (void)sendPairReplyWithAllow:(BOOL)allow;
/// 获取消息推送的开关支持类型
- (void)readNotificationSupportType;
- (void)getCalendarWithId:(NSInteger)id;
- (void)deleteCalendarWithId:(NSInteger)id;
- (void)getCalendarSupportLimit;
- (void)setCalendarReminderWithIsOpen:(BOOL)isOpen time:(NSInteger)time;
- (void)getCalendarReminder;
- (void)deleteAllCalendar;
- (void)readNotificationState;
- (void)sendNotificationState:(NSArray<NSNumber *> * _Nonnull)states;
- (void)sendSetUpAlarm:(NSArray<NSNumber *> * _Nonnull)alarm;
- (void)sendAddAlarm:(NSArray<NSNumber *> * _Nonnull)alarm;
- (void)sendDeleteAlarm:(NSInteger)id;
- (void)sendDeleteAllAlarm;
- (void)readAllAlarm;
/// 压力
- (void)sendStrees:(NSInteger)type;
- (void)sendAutoStressStatusWithType:(NSInteger)type;
- (void)sendExerciseGoalWithType:(NSInteger)type goals:(CRPExerciseGoalsModel * _Nonnull)goals;
- (void)readExerciseGoalWithType:(NSInteger)type;
- (void)sendExerciseStateWithModel:(CRPExerciseGoalStateModel * _Nonnull)model;
- (void)readExerciseState;
- (void)readAutoStressStatus;
- (void)readStressRecord;
- (void)readAutoStressData:(NSInteger)i;
- (void)readStressIsSupport;
/// HRV
- (void)sendHRV:(NSInteger)type;
- (void)sendAutoHRVStatusWithType:(NSInteger)type;
- (void)readHRVRecord;
- (void)readAutoHRVData:(NSInteger)i;
- (void)readHRVIsSupport;
- (void)readHistoryStep:(NSInteger)i;
- (void)readHistorySleep:(NSInteger)i;
- (void)readHistory24Hr:(NSInteger)day :(NSInteger)i;
/// 电子名片
- (void)sendAddECardWithECard:(CRPECard * _Nonnull)ECard ECardURLLimit:(NSInteger)ECardURLLimit;
/// 删除电子名片
- (void)sendDeleteECardWithId:(NSInteger)id;
/// 获取的电子名片支持信息
- (void)readECard;
/// 获取的电子名片信息
- (void)readECardInfoWithId:(NSInteger)id;
/// 设置的电子名片排序
- (void)sendECardInfoWithSequenceArray:(NSArray<NSNumber *> * _Nonnull)sequenceArray;
/// 查询GPS数据
- (void)readGPSDataInfo;
- (void)readGPSDataDetailWithTime:(NSInteger)time index:(NSInteger)index;
- (void)sendEPODataWithType:(NSInteger)type sizeCmd:(NSArray<NSNumber *> * _Nonnull)sizeCmd;
- (void)sendGPSDataWithLatitude:(NSInteger)latitude longitude:(NSInteger)longitude;
- (void)setVibrationStrengthWithType:(NSInteger)type;
- (void)getVibrationStrength;
- (void)setSleepTimeWithInfo:(CRPSleepDetectionInfo * _Nonnull)info;
- (void)getSleepTime;
- (void)read24HoursCal:(NSInteger)i;
- (void)read24HoursDistance:(NSInteger)i;
- (void)readOTAPkgSize;
- (void)readJLScreenMarketVersion;
- (void)readJLScreenMarketInfo;
- (void)sendJLScreenMarketIDWithId:(NSInteger)id;
- (void)readWorldClockInfo;
- (void)readWorldClockDetailWithId:(NSInteger)id;
- (void)sendWorldClockWithWorldClock:(CRPWorldClockModel * _Nonnull)worldClock;
- (void)deleteWorldClockWithId:(NSInteger)id;
- (void)sendWorldClockSequenceWithIds:(NSArray<NSNumber *> * _Nonnull)ids;
- (void)sendClearWorldClock;
- (void)sendBrightnessWithValue:(NSInteger)value;
- (void)readBrightnessInfo;
- (void)sendChatGPTStateWithType:(enum CRPGPTType)type state:(enum CRPGPTReplyState)state;
- (void)sendChatGPTQuestionWithType:(enum CRPGPTType)type content:(NSString * _Nonnull)content;
- (void)sendChatGPTAnsweringWithContent:(NSString * _Nonnull)content;
- (void)sendChatGPTAnswerWithContent:(NSString * _Nonnull)content;
- (void)sendChatGPTPreViewScreen:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)sendChatGPTBGScreen:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)sendChatGPTScreenSuccess:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)sendAIImageScreenContent:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)readAIImageScreenContent;
- (void)readGPTSupport;
- (void)readStockInfo;
- (void)sendNullStockData;
- (void)sendStockDataInfoWithData:(NSArray<NSNumber *> * _Nonnull)data;
- (void)sendStockDataDetailWithData:(NSArray<NSNumber *> * _Nonnull)data;
- (void)deleteStockInfoWithId:(NSInteger)id;
- (void)sendStockSequenceWithIds:(NSArray<NSNumber *> * _Nonnull)ids;
- (void)sendDrinkWaterGoalWithGoal:(NSInteger)goal;
- (void)readDrinkWaterGoal;
- (void)sendTodayDrinkWaterTotalValueWithValue:(NSInteger)value;
- (void)readTodayDrinkWaterTotalValue;
- (void)addDrinkWaterWithRecord:(CRPNewDrinkWaterRecord * _Nonnull)record;
- (void)modifyDrinkWaterWithSource:(enum CRPDrinkWaterSource)source record:(CRPNewDrinkWaterRecord * _Nonnull)record;
- (void)deleteDrinkWaterWithSource:(enum CRPDrinkWaterSource)source recordID:(NSInteger)recordID;
- (void)readDrinkWaterRecord;
- (void)sendDrinkWaterRecordWithRecords:(NSArray<CRPNewDrinkWaterRecord *> * _Nonnull)records;
- (void)sendNewDrinkWaterRemindWithModel:(CRPNewDrinkWaterRemind * _Nonnull)model;
- (void)readNewDrinkWaterRemind;
- (void)readSOS;
- (void)sendSOSSwitchWithOpen:(BOOL)open;
- (void)sendEmergencyContactWithContact:(CRPEmergencyContact * _Nonnull)contact;
- (void)readEmergencyContact;
- (void)addProtocolWithCmd:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)addProtocolWithoutConnectedWithCmd:(NSArray<NSNumber *> * _Nonnull)cmd;
- (void)stateChange:(CBCentralManager * _Nonnull)central;
- (void)didDiscoverCharacteristics:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)parseCommandPacket:(CommandPacket * _Nonnull)commandPacket;
- (void)didConnected;
- (void)didConnect;
- (void)didSyncing;
- (void)didDisconnect;
- (void)reConnect;
- (BOOL)isConnected SWIFT_WARN_UNUSED_RESULT;
- (void)writeCRPUpgrade:(NSData * _Nonnull)data;
- (void)writeCRPScreen:(NSData * _Nonnull)data;
- (void)writeData:(NSData * _Nonnull)data;
- (void)writeDataWithoutConnected:(NSData * _Nonnull)data;
- (void)getProtocolVerWithVerStr:(NSString * _Nonnull)verStr;
- (NSArray<NSNumber *> * _Nonnull)modifyToV2WithData:(NSArray<NSNumber *> * _Nonnull)data :(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isNewECGVersion SWIFT_WARN_UNUSED_RESULT;
- (void)checkUpgradeTypeWithHandler:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (NSString * _Nonnull)getVerNumber SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getLittleEndianCountWithCount:(NSInteger)count SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getLittleEndianWithValue:(NSInteger)value count:(NSInteger)count SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getStockUInt64DataWithDecimalWithNum:(double)num SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getStockInt64DataWithDecimalWithNum:(double)num SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getStockInt16DataWithNum:(double)num SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getStockInt16percentageDataWithNum:(double)num SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getStockUInt64DataWithNum:(NSInteger)num SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getLittleEndianCountWithCount:(NSInteger)count byteCount:(NSInteger)byteCount SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getStringDataWithStr:(NSString * _Nullable)str :(NSInteger)limit SWIFT_WARN_UNUSED_RESULT;
@end

@class HeartModel;
enum CRPUpgradeState : NSInteger;
enum ecgState : NSInteger;
@class CRPSportRecord;
enum SportType : NSInteger;
enum CRPPairState : NSInteger;
@class CRPNewSportingModel;

SWIFT_PROTOCOL("_TtP12CRPSmartBand18CRPManagerDelegate_")
@protocol CRPManagerDelegate
- (void)didState:(enum CRPState)state;
- (void)didBluetoothState:(enum CRPBluetoothState)state;
- (void)receiveSteps:(StepModel * _Nonnull)model;
- (void)receiveHeartRate:(NSInteger)heartRate;
- (void)receiveRealTimeHeartRate:(NSInteger)heartRate :(NSInteger)rri;
- (void)receiveHeartRateAll:(HeartModel * _Nonnull)model;
- (void)receiveBloodPressure:(NSInteger)heartRate :(NSInteger)sbp :(NSInteger)dbp;
- (void)receiveSpO2:(NSInteger)o2;
- (void)receiveUpgrede:(enum CRPUpgradeState)state :(NSInteger)progress;
- (void)receiveUpgradeScreen:(enum CRPUpgradeState)state :(NSInteger)progress;
- (void)recevieTakePhoto;
@optional
- (void)recevieWeather;
- (void)recevieFindPhone:(NSInteger)state;
- (void)receiveECGDate:(enum ecgState)state :(NSArray<NSNumber *> * _Nonnull)data completeTime:(NSInteger)completeTime;
- (void)receiveRealTimeTemperature:(double)temp;
- (void)receiveTemperature:(NSInteger)state;
- (void)receiveCalling;
- (void)receviceHRVRealTime:(CRPHRVDataModel * _Nonnull)model;
- (void)receivePhoneNumberWithNumber:(NSString * _Nonnull)number;
- (void)receiveMedicineInfo:(NSInteger)max :(CRPMedicineReminderModel * _Nullable)model;
- (void)receiveSportList:(NSArray<CRPSportRecord *> * _Nonnull)list;
- (void)receiveSportState:(enum SportType)state :(NSInteger)err;
- (void)receiveConnectConfirm:(enum CRPPairState)state;
- (void)receiveStress:(NSInteger)stress;
- (void)receiveHRV:(NSInteger)hrv;
- (void)receiveGPSDataRecordListWithTime:(NSArray<NSNumber *> * _Nonnull)time;
- (void)receiveGPSRealTimeWithLocation:(CLLocationCoordinate2D)location;
- (void)receiveGPSAuxiliaryRequest;
- (void)receiveEPORequestWithType:(NSInteger)type;
- (void)receiveEPOSync:(enum CRPUpgradeState)state :(NSInteger)progress;
- (void)receiveRealTimeSportDataWithData:(CRPNewSportingModel * _Nonnull)data;
- (void)receiveExitCameraView;
- (void)receiveAddDrinkWaterRecordWithRecord:(CRPNewDrinkWaterRecord * _Nonnull)record;
- (void)receiveModifyDrinkWaterRecordWithSource:(enum CRPDrinkWaterSource)source record:(CRPNewDrinkWaterRecord * _Nonnull)record;
- (void)receiveDeleteDrinkWaterRecordWithSource:(enum CRPDrinkWaterSource)source recordID:(NSInteger)recordID;
- (void)receiveRequestAppDrinkWaterRecord;
- (void)receiveStockRequestUpdateInfo;
- (void)receiveGPTStateWithType:(enum CRPGPTType)type state:(enum CRPGPTRequestState)state result:(NSData * _Nonnull)result;
- (void)receiveRequestGPTAnswer;
- (void)receiveRequestGPTPreviewImageWithImageSize:(CGSize)imageSize;
- (void)receiveRequestGPTImage;
@end


@class CRPMedicineTimeModel;

SWIFT_CLASS("_TtC12CRPSmartBand24CRPMedicineReminderModel")
@interface CRPMedicineReminderModel : NSObject
@property (nonatomic) NSInteger medincineID;
@property (nonatomic) NSInteger pastDay;
@property (nonatomic, copy) NSString * _Nonnull medincineName;
@property (nonatomic) NSInteger cycleTime;
@property (nonatomic, copy) NSArray<CRPMedicineTimeModel *> * _Nonnull reminderTimes;
- (nonnull instancetype)initWithMedincineID:(NSInteger)medincineID pastDay:(NSInteger)pastDay medincineName:(NSString * _Nonnull)medincineName cycleTime:(NSInteger)cycleTime reminderTimes:(NSArray<CRPMedicineTimeModel *> * _Nonnull)reminderTimes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand20CRPMedicineTimeModel")
@interface CRPMedicineTimeModel : NSObject
@property (nonatomic) NSInteger remindTimeHour;
@property (nonatomic) NSInteger remindTimeMinute;
@property (nonatomic) NSInteger pillCount;
- (nonnull instancetype)initWithRemindTimeHour:(NSInteger)remindTimeHour remindTimeMinute:(NSInteger)remindTimeMinute pillCount:(NSInteger)pillCount OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand22CRPNewDrinkWaterRecord")
@interface CRPNewDrinkWaterRecord : NSObject
@property (nonatomic) NSInteger id;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger minute;
@property (nonatomic) NSInteger waterIntake;
- (nonnull instancetype)initWithId:(NSInteger)id hour:(NSInteger)hour minute:(NSInteger)minute waterIntake:(NSInteger)waterIntake OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand22CRPNewDrinkWaterRemind")
@interface CRPNewDrinkWaterRemind : NSObject
@property (nonatomic) BOOL isRemind;
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger startMinute;
@property (nonatomic) NSInteger remindCount;
@property (nonatomic) NSInteger remindTimeInterval;
- (nonnull instancetype)initWithIsRemind:(BOOL)isRemind startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute remindCount:(NSInteger)remindCount remindTimeInterval:(NSInteger)remindTimeInterval OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand16CRPNewSportModel")
@interface CRPNewSportModel : NSObject
@property (nonatomic) NSInteger id;
@property (nonatomic) NSInteger startTime;
@property (nonatomic) NSInteger endTime;
@property (nonatomic) NSInteger vaildTime;
@property (nonatomic) enum SportType type;
@property (nonatomic) NSInteger step;
@property (nonatomic) NSInteger distance;
@property (nonatomic) NSInteger kcal;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull heartRate;
- (nonnull instancetype)initWithId:(NSInteger)id startTime:(NSInteger)startTime endTime:(NSInteger)endTime vaildTime:(NSInteger)vaildTime type:(enum SportType)type step:(NSInteger)step distance:(NSInteger)distance kcal:(NSInteger)kcal heartRate:(NSArray<NSNumber *> * _Nonnull)heartRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum CRPSportState : NSInteger;

SWIFT_CLASS("_TtC12CRPSmartBand19CRPNewSportingModel")
@interface CRPNewSportingModel : NSObject
@property (nonatomic) NSInteger startTime;
@property (nonatomic) enum CRPSportState type;
@property (nonatomic) NSInteger heartRate;
@property (nonatomic) NSInteger step;
@property (nonatomic) NSInteger sportTime;
@property (nonatomic) NSInteger distance;
@property (nonatomic) NSInteger kcal;
- (nonnull instancetype)initWithStartTime:(NSInteger)startTime type:(enum CRPSportState)type heartRate:(NSInteger)heartRate step:(NSInteger)step sportTime:(NSInteger)sportTime distance:(NSInteger)distance kcal:(NSInteger)kcal OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand27CRPNewWatchFaceSupportModel")
@interface CRPNewWatchFaceSupportModel : NSObject
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull supportModel;
@property (nonatomic) NSInteger currentID;
@property (nonatomic) NSInteger udtMaxSize;
- (nonnull instancetype)initWithSupportModel:(NSArray<NSNumber *> * _Nonnull)supportModel currentID:(NSInteger)currentID udtMaxSize:(NSInteger)udtMaxSize OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand13CRPNewWeather")
@interface CRPNewWeather : NSObject
@property (nonatomic) NSInteger type;
@property (nonatomic) NSInteger temp;
@property (nonatomic) NSInteger pm25;
@property (nonatomic, copy) NSString * _Nonnull city;
@property (nonatomic) NSInteger sunriseHour;
@property (nonatomic) NSInteger sunriseMin;
@property (nonatomic) NSInteger sunsetHour;
@property (nonatomic) NSInteger sunsetMin;
- (nonnull instancetype)initWithType:(NSInteger)type temp:(NSInteger)temp pm25:(NSInteger)pm25 city:(NSString * _Nonnull)city sunriseHour:(NSInteger)sunriseHour sunriseMin:(NSInteger)sunriseMin sunsetHour:(NSInteger)sunsetHour sunsetMin:(NSInteger)sunsetMin OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, CRPNordicChip, open) {
  CRPNordicChipNone = 0,
  CRPNordicChipNRF_51822 = 1,
  CRPNordicChipNRF_52832 = 2,
  CRPNordicChipNRF_52810 = 3,
  CRPNordicChipNRF_52840 = 4,
};


SWIFT_CLASS("_TtC12CRPSmartBand16CRPO2RecordModel")
@interface CRPO2RecordModel : NSObject
@property (nonatomic) NSInteger value;
@property (nonatomic) NSInteger time;
- (nonnull instancetype)initWithValue:(NSInteger)value time:(NSInteger)time OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, CRPOptions, open) {
  CRPOptionsBattery = 0,
  CRPOptionsSoftver = 1,
  CRPOptionsGoal = 2,
  CRPOptionsDominantHand = 3,
  CRPOptionsTimeformat = 4,
  CRPOptionsDial = 5,
  CRPOptionsLanguage = 6,
  CRPOptionsRemindersToMove = 7,
  CRPOptionsQuickView = 8,
  CRPOptionsUnit = 9,
  CRPOptionsMac = 10,
  CRPOptionsViews = 11,
  CRPOptionsHeart24 = 12,
  CRPOptionsHeart24Interval = 13,
  CRPOptionsFulldayheart = 14,
  CRPOptionsIsUpgrade = 15,
  CRPOptionsOTAMac = 16,
  CRPOptionsTemperature24 = 17,
  CRPOptionsAutoLockTime = 18,
  CRPOptionsTemperatureUnit = 19,
  CRPOptionsAutoO2 = 20,
  CRPOptionsTodayAutoO2 = 21,
  CRPOptionsYesterdataAutoO2 = 22,
  CRPOptionsUpgradeType = 23,
  CRPOptionsHrvInterval = 24,
  CRPOptionsHrvCount = 25,
};

typedef SWIFT_ENUM(NSInteger, CRPPairState, open) {
  CRPPairStateFail = 0,
  CRPPairStateSuccess = 1,
  CRPPairStateWairPair = 0xFF,
};

typedef SWIFT_ENUM(NSInteger, CRPPlatform, open) {
  CRPPlatformNone = 0,
  CRPPlatformNordic = 1,
  CRPPlatformHuntersun = 2,
  CRPPlatformRealtek = 3,
  CRPPlatformGoodix = 4,
  CRPPlatformSifli = 5,
  CRPPlatformJieLi = 6,
};


SWIFT_CLASS("_TtC12CRPSmartBand16CRPPlatformModel")
@interface CRPPlatformModel : NSObject
@property (nonatomic) enum CRPPlatform platform;
@property (nonatomic) NSInteger chip;
- (nonnull instancetype)initWithPlatform:(enum CRPPlatform)platform chip:(NSInteger)chip OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, CRPRealtekChip, open) {
  CRPRealtekChipNone = 0,
  CRPRealtekChipRTL_8762CK = 1,
  CRPRealtekChipRTL_8762CW = 2,
  CRPRealtekChipRTL_8762D = 3,
  CRPRealtekChipRTL_8763E = 4,
};


SWIFT_CLASS("_TtC12CRPSmartBand9CRPScreen")
@interface CRPScreen : NSObject
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull data;
@property (nonatomic) uint16_t crc_last;
@property (nonatomic) NSInteger totalParts;
@property (nonatomic) NSInteger part;
@property (nonatomic) NSInteger last_index;
@property (nonatomic) NSInteger count_index;
@property (nonatomic, copy) NSString * _Nonnull verNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull imagePath;
@property (nonatomic) NSInteger originalSize;
@property (nonatomic) NSInteger abbreviatedSize;
@property (nonatomic) BOOL isCricle;
@property (nonatomic) void * _Null_unspecified wkrmem;
@property (nonatomic, readonly) NSInteger miniLzoSize;
@property (nonatomic) NSInteger originalSizeHeight;
@property (nonatomic) NSInteger abbreviatedSizeHeight;
@property (nonatomic) NSInteger compressionType;
@property (nonatomic) NSInteger pkgSize;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CRPScreen * _Nonnull sharedInstance;)
+ (CRPScreen * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)load:(NSString * _Nonnull)imagePath :(NSInteger)index;
- (NSArray<NSNumber *> * _Nonnull)getsub:(NSInteger)i SWIFT_WARN_UNUSED_RESULT;
- (void)calLastCrc;
- (void)stop;
- (uint16_t)crc16Compute:(NSArray<NSNumber *> * _Nonnull)p_data :(uint16_t)c SWIFT_WARN_UNUSED_RESULT;
- (void)doChangeScreenWithImage:(UIImage * _Nonnull)image;
- (NSArray<NSNumber *> * _Nonnull)delrepeatdataWithData:(NSArray<NSNumber *> * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nonnull)miniLzoWithData:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nonnull)getsubDataWithAllData:(NSData * _Nonnull)allData index:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
- (void)getRtkImageWithImage:(UIImage * _Nonnull)image;
- (void)loadPreViewWithImage:(UIImage * _Nonnull)image size:(CGSize)size cornerRadius:(CGFloat)cornerRadius;
- (void)loadWithImage:(UIImage * _Nonnull)image;
- (void)stopAIPreViewImage;
- (void)stopAIBGImage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12CRPSmartBand27CRPScreenMarketVersionModel")
@interface CRPScreenMarketVersionModel : NSObject
@property (nonatomic) NSInteger apiVersion;
@property (nonatomic) NSInteger funcVersion;
- (nonnull instancetype)initWithApiVersion:(NSInteger)apiVersion funcVersion:(NSInteger)funcVersion OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand14CRPScreenModel")
@interface CRPScreenModel : NSObject
/// 设计师名称
@property (nonatomic, copy) NSString * _Nullable uploader;
/// 表盘名称
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) NSInteger id;
/// 下载量
@property (nonatomic) NSInteger download;
/// .bin文件
@property (nonatomic, copy) NSString * _Nullable file;
/// 表盘大小
@property (nonatomic) NSInteger size;
/// 图片链接
@property (nonatomic, copy) NSString * _Nullable preview;
/// 有限
@property (nonatomic, copy) NSString * _Nullable remark_lang;
/// 中文
@property (nonatomic, copy) NSString * _Nullable remark_cn;
/// 英文
@property (nonatomic, copy) NSString * _Nullable remark_en;
- (nonnull instancetype)initWithUploader:(NSString * _Nullable)uploader name:(NSString * _Nullable)name id:(NSInteger)id download:(NSInteger)download file:(NSString * _Nullable)file size:(NSInteger)size preview:(NSString * _Nullable)preview remark_lang:(NSString * _Nullable)remark_lang remark_cn:(NSString * _Nullable)remark_cn remark_en:(NSString * _Nullable)remark_en OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<CRPScreenModel *> * _Nonnull)deserializeWithData:(NSArray<NSDictionary<NSString *, id> *> * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand18CRPScreenModelInfo")
@interface CRPScreenModelInfo : NSObject
/// 设计师名称
@property (nonatomic, copy) NSString * _Nullable uploader;
/// 表盘名称
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) NSInteger id;
/// 下载量
@property (nonatomic) NSInteger download;
/// .bin文件
@property (nonatomic, copy) NSString * _Nullable file;
/// 表盘大小
@property (nonatomic) NSInteger size;
/// 图片链接
@property (nonatomic, copy) NSString * _Nullable preview;
/// 描述
@property (nonatomic, copy) NSString * _Nullable remark_lang;
/// 中文描述
@property (nonatomic, copy) NSString * _Nullable remark_cn;
/// 英文描述
@property (nonatomic, copy) NSString * _Nullable remark_en;
/// 表盘列表
@property (nonatomic, copy) NSArray<CRPScreenModel *> * _Nonnull face_list;
- (nonnull instancetype)initWithUploader:(NSString * _Nullable)uploader name:(NSString * _Nullable)name id:(NSInteger)id download:(NSInteger)download file:(NSString * _Nullable)file size:(NSInteger)size preview:(NSString * _Nullable)preview remark_lang:(NSString * _Nullable)remark_lang remark_cn:(NSString * _Nullable)remark_cn remark_en:(NSString * _Nullable)remark_en face_list:(NSArray<CRPScreenModel *> * _Nonnull)face_list OBJC_DESIGNATED_INITIALIZER;
+ (CRPScreenModelInfo * _Nullable)deserializeWithData:(NSDictionary<NSString *, id> * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand17CRPScreenTagModel")
@interface CRPScreenTagModel : NSObject
/// 标签名称
@property (nonatomic, copy) NSString * _Nullable tag_name;
/// 标签id
@property (nonatomic) NSInteger id;
/// 表盘
@property (nonatomic, copy) NSArray<CRPScreenModel *> * _Nonnull faces;
- (nonnull instancetype)initWithTag_name:(NSString * _Nullable)tag_name id:(NSInteger)id faces:(NSArray<CRPScreenModel *> * _Nonnull)faces OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Responsible for handling all delegate callbacks for the underlying session.
SWIFT_CLASS("_TtC12CRPSmartBand18CRPSessionDelegate")
@interface CRPSessionDelegate : NSObject
/// Initializes the <code>SessionDelegate</code> instance.
///
/// returns:
/// The new <code>SessionDelegate</code> instance.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Returns a <code>Bool</code> indicating whether the <code>SessionDelegate</code> implements or inherits a method that can respond
/// to a specified message.
/// \param selector A selector that identifies a message.
///
///
/// returns:
/// <code>true</code> if the receiver implements or inherits a method that can respond to selector, otherwise <code>false</code>.
- (BOOL)respondsToSelector:(SEL _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
@end


@interface CRPSessionDelegate (SWIFT_EXTENSION(CRPSmartBand)) <NSURLSessionDownloadDelegate>
/// Tells the delegate that a download task has finished downloading.
/// \param session The session containing the download task that finished.
///
/// \param downloadTask The download task that finished.
///
/// \param location A file URL for the temporary file. Because the file is temporary, you must either
/// open the file for reading or move it to a permanent location in your app’s sandbox
/// container directory before returning from this delegate method.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
/// Periodically informs the delegate about the download’s progress.
/// \param session The session containing the download task.
///
/// \param downloadTask The download task.
///
/// \param bytesWritten The number of bytes transferred since the last time this delegate
/// method was called.
///
/// \param totalBytesWritten The total number of bytes transferred so far.
///
/// \param totalBytesExpectedToWrite The expected length of the file, as provided by the Content-Length
/// header. If this header was not provided, the value is
/// <code>NSURLSessionTransferSizeUnknown</code>.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
/// Tells the delegate that the download task has resumed downloading.
/// \param session The session containing the download task that finished.
///
/// \param downloadTask The download task that resumed. See explanation in the discussion.
///
/// \param fileOffset If the file’s cache policy or last modified date prevents reuse of the
/// existing content, then this value is zero. Otherwise, this value is an
/// integer representing the number of bytes on disk that do not need to be
/// retrieved again.
///
/// \param expectedTotalBytes The expected length of the file, as provided by the Content-Length header.
/// If this header was not provided, the value is NSURLSessionTransferSizeUnknown.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
@end


@interface CRPSessionDelegate (SWIFT_EXTENSION(CRPSmartBand)) <NSURLSessionDelegate>
/// Tells the delegate that the session has been invalidated.
/// \param session The session object that was invalidated.
///
/// \param error The error that caused invalidation, or nil if the invalidation was explicit.
///
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
/// Requests credentials from the delegate in response to a session-level authentication request from the
/// remote server.
/// \param session The session containing the task that requested authentication.
///
/// \param challenge An object that contains the request for authentication.
///
/// \param completionHandler A handler that your delegate method must call providing the disposition
/// and credential.
///
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
/// Tells the delegate that all messages enqueued for a session have been delivered.
/// \param session The session that no longer has any outstanding requests.
///
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session;
@end


@interface CRPSessionDelegate (SWIFT_EXTENSION(CRPSmartBand)) <NSURLSessionDataDelegate>
/// Tells the delegate that the data task received the initial reply (headers) from the server.
/// \param session The session containing the data task that received an initial reply.
///
/// \param dataTask The data task that received an initial reply.
///
/// \param response A URL response object populated with headers.
///
/// \param completionHandler A completion handler that your code calls to continue the transfer, passing a
/// constant to indicate whether the transfer should continue as a data task or
/// should become a download task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
/// Tells the delegate that the data task was changed to a download task.
/// \param session The session containing the task that was replaced by a download task.
///
/// \param dataTask The data task that was replaced by a download task.
///
/// \param downloadTask The new download task that replaced the data task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didBecomeDownloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask;
/// Tells the delegate that the data task has received some of the expected data.
/// \param session The session containing the data task that provided data.
///
/// \param dataTask The data task that provided data.
///
/// \param data A data object containing the transferred data.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
/// Asks the delegate whether the data (or upload) task should store the response in the cache.
/// \param session The session containing the data (or upload) task.
///
/// \param dataTask The data (or upload) task.
///
/// \param proposedResponse The default caching behavior. This behavior is determined based on the current
/// caching policy and the values of certain received headers, such as the Pragma
/// and Cache-Control headers.
///
/// \param completionHandler A block that your handler must call, providing either the original proposed
/// response, a modified version of that response, or NULL to prevent caching the
/// response. If your delegate implements this method, it must call this completion
/// handler; otherwise, your app leaks memory.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

@class NSURLSessionStreamTask;
@class NSOutputStream;

SWIFT_AVAILABILITY(tvos,introduced=9.0) SWIFT_AVAILABILITY(macos,introduced=10.11) SWIFT_AVAILABILITY(ios,introduced=9.0)
@interface CRPSessionDelegate (SWIFT_EXTENSION(CRPSmartBand)) <NSURLSessionStreamDelegate>
/// Tells the delegate that the read side of the connection has been closed.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session readClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the write side of the connection has been closed.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session writeClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the system has determined that a better route to the host is available.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session betterRouteDiscoveredForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the stream task has been completed and provides the unopened stream objects.
/// \param session The session.
///
/// \param streamTask The stream task.
///
/// \param inputStream The new input stream.
///
/// \param outputStream The new output stream.
///
- (void)URLSession:(NSURLSession * _Nonnull)session streamTask:(NSURLSessionStreamTask * _Nonnull)streamTask didBecomeInputStream:(NSInputStream * _Nonnull)inputStream outputStream:(NSOutputStream * _Nonnull)outputStream;
@end

@class NSURLSessionTaskMetrics;

@interface CRPSessionDelegate (SWIFT_EXTENSION(CRPSmartBand)) <NSURLSessionTaskDelegate>
/// Tells the delegate that the remote server requested an HTTP redirect.
/// \param session The session containing the task whose request resulted in a redirect.
///
/// \param task The task whose request resulted in a redirect.
///
/// \param response An object containing the server’s response to the original request.
///
/// \param request A URL request object filled out with the new location.
///
/// \param completionHandler A closure that your handler should call with either the value of the request
/// parameter, a modified URL request object, or NULL to refuse the redirect and
/// return the body of the redirect response.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
/// Requests credentials from the delegate in response to an authentication request from the remote server.
/// \param session The session containing the task whose request requires authentication.
///
/// \param task The task whose request requires authentication.
///
/// \param challenge An object that contains the request for authentication.
///
/// \param completionHandler A handler that your delegate method must call providing the disposition
/// and credential.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
/// Tells the delegate when a task requires a new request body stream to send to the remote server.
/// \param session The session containing the task that needs a new body stream.
///
/// \param task The task that needs a new body stream.
///
/// \param completionHandler A completion handler that your delegate method should call with the new body stream.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
/// Periodically informs the delegate of the progress of sending body content to the server.
/// \param session The session containing the data task.
///
/// \param task The data task.
///
/// \param bytesSent The number of bytes sent since the last time this delegate method was called.
///
/// \param totalBytesSent The total number of bytes sent so far.
///
/// \param totalBytesExpectedToSend The expected length of the body data.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
/// Tells the delegate that the session finished collecting metrics for the task.
/// \param session The session collecting the metrics.
///
/// \param task The task whose metrics have been collected.
///
/// \param metrics The collected metrics.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics SWIFT_AVAILABILITY(tvos,introduced=10.0) SWIFT_AVAILABILITY(macos,introduced=10.12) SWIFT_AVAILABILITY(ios,introduced=10.0);
/// Tells the delegate that the task finished transferring data.
/// \param session The session containing the task whose request finished transferring data.
///
/// \param task The task whose request finished transferring data.
///
/// \param error If an error occurred, an error object indicating how the transfer failed, otherwise nil.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
@end

typedef SWIFT_ENUM(NSInteger, CRPSifliChip, open) {
  CRPSifliChipNone = 0,
  CRPSifliChipSF_551 = 1,
  CRPSifliChipSF_555 = 2,
  CRPSifliChipSF_6600 = 3,
  CRPSifliChipSF_6700 = 4,
};

@class NSMutableData;

SWIFT_CLASS("_TtC12CRPSmartBand12CRPSleepData")
@interface CRPSleepData : NSObject
@property (nonatomic, strong) NSMutableData * _Null_unspecified nsdata;
@property (nonatomic) NSInteger shallowSleep;
@property (nonatomic) NSInteger deepSleep;
@property (nonatomic) NSInteger REMSleep;
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull parts;
@property (nonatomic, readonly) NSInteger REM_START_TIME;
@property (nonatomic, readonly) NSInteger REM_PERIOD;
- (nonnull instancetype)init:(NSMutableData * _Nonnull)nsdata isAgoSleep:(BOOL)isAgoSleep isREM:(BOOL)isREM OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)formatSleepTimeWithCurrentHour:(NSInteger)currentHour currentMinute:(NSInteger)currentMinute nextHour:(NSInteger)nextHour nextMinute:(NSInteger)nextMinute SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getREMTimeWithLast:(NSInteger)last total:(NSInteger)total SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand21CRPSleepDetectionInfo")
@interface CRPSleepDetectionInfo : NSObject
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger endHour;
- (nonnull instancetype)initWithStartHour:(NSInteger)startHour endHour:(NSInteger)endHour OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class weather;
@class forecastWeather;
@class newVersionInfo;
@class newVersionTpInfo;
@class watchFaceInfo;
@class CRPStockSelectionModel;

SWIFT_CLASS("_TtC12CRPSmartBand15CRPSmartBandSDK")
@interface CRPSmartBandSDK : NSObject <CRPManagerDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CRPSmartBandSDK * _Nonnull sharedInstance;)
+ (CRPSmartBandSDK * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) CRPManager * _Nonnull manager;
@property (nonatomic, strong) id <CRPManagerDelegate> _Nullable delegate;
@property (nonatomic, readonly, strong) CRPDiscovery * _Nullable currentCRPDiscovery;
@property (nonatomic, strong) NSTimer * _Null_unspecified HTXScanTimer;
@property (nonatomic, copy) NSString * _Null_unspecified mac;
@property (nonatomic) NSInteger HTXScanTime;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)didState:(enum CRPState)state;
- (void)didBluetoothState:(enum CRPBluetoothState)state;
- (void)receiveSteps:(StepModel * _Nonnull)model;
- (void)receiveHeartRate:(NSInteger)heartRate;
- (void)receiveHeartRateAll:(HeartModel * _Nonnull)model;
- (void)receiveBloodPressure:(NSInteger)heartRate :(NSInteger)sbp :(NSInteger)dbp;
- (void)receiveSpO2:(NSInteger)o2;
- (void)receiveRealTimeHeartRate:(NSInteger)heartRate :(NSInteger)rri;
- (void)receiveUpgrede:(enum CRPUpgradeState)state :(NSInteger)progress;
- (void)receiveUpgradeScreen:(enum CRPUpgradeState)state :(NSInteger)progress;
- (void)recevieTakePhoto;
- (void)recevieWeather;
- (void)recevieFindPhone:(NSInteger)state;
- (void)receiveECGDate:(enum ecgState)state :(NSArray<NSNumber *> * _Nonnull)data completeTime:(NSInteger)completeTime;
- (void)receiveRealTimeTemperature:(double)temp;
- (void)receiveTemperature:(NSInteger)state;
- (void)receiveCalling;
- (void)receviceHRVRealTime:(CRPHRVDataModel * _Nonnull)model;
- (void)receivePhoneNumberWithNumber:(NSString * _Nonnull)number;
- (void)receiveMedicineInfo:(NSInteger)max :(CRPMedicineReminderModel * _Nullable)model;
- (void)receiveSportList:(NSArray<CRPSportRecord *> * _Nonnull)list;
- (void)receiveSportState:(enum SportType)state :(NSInteger)err;
- (void)receiveConnectConfirm:(enum CRPPairState)state;
- (void)receiveStress:(NSInteger)stress;
- (void)receiveHRV:(NSInteger)hrv;
- (void)receiveGPSDataRecordListWithTime:(NSArray<NSNumber *> * _Nonnull)time;
- (void)receiveGPSRealTimeWithLocation:(CLLocationCoordinate2D)location;
- (void)receiveGPSAuxiliaryRequest;
- (void)receiveEPORequestWithType:(NSInteger)type;
- (void)receiveEPOSync:(enum CRPUpgradeState)state :(NSInteger)progress;
- (void)receiveRealTimeSportDataWithData:(CRPNewSportingModel * _Nonnull)data;
- (void)receiveExitCameraView;
- (void)receiveAddDrinkWaterRecordWithRecord:(CRPNewDrinkWaterRecord * _Nonnull)record;
- (void)receiveModifyDrinkWaterRecordWithSource:(enum CRPDrinkWaterSource)source record:(CRPNewDrinkWaterRecord * _Nonnull)record;
- (void)receiveDeleteDrinkWaterRecordWithSource:(enum CRPDrinkWaterSource)source recordID:(NSInteger)recordID;
- (void)receiveRequestAppDrinkWaterRecord;
- (void)receiveStockRequestUpdateInfo;
- (void)receiveGPTStateWithType:(enum CRPGPTType)type state:(enum CRPGPTRequestState)state result:(NSData * _Nonnull)result;
- (void)receiveRequestGPTAnswer;
- (void)receiveRequestGPTPreviewImageWithImageSize:(CGSize)imageSize;
- (void)receiveRequestGPTImage;
- (void)scan:(NSTimeInterval)duration progressHandler:(void (^ _Nullable)(NSArray<CRPDiscovery *> * _Nonnull))progressHandler completionHandler:(void (^ _Nullable)(NSArray<CRPDiscovery *> * _Nullable, enum CRPError))completionHandler;
- (void)interruptScan;
- (void)connet:(CRPDiscovery * _Nonnull)discovery;
- (void)reConnet;
- (void)disConnet;
- (void)remove:(void (^ _Nonnull)(enum CRPState, enum CRPError))handler;
- (void)getSteps:(void (^ _Nonnull)(StepModel * _Nonnull, enum CRPError))handler;
- (void)getSleepData:(void (^ _Nonnull)(SleepModel * _Nonnull, enum CRPError))handler;
- (void)getSleepDataWithREM:(void (^ _Nonnull)(SleepModel * _Nonnull, enum CRPError))handler;
- (void)getSportData:(void (^ _Nonnull)(NSArray<SportModel *> * _Nonnull, enum CRPError))handler;
- (void)getAllData:(void (^ _Nonnull)(NSArray<StepModel *> * _Nonnull, NSArray<SleepModel *> * _Nonnull, enum CRPError))handler;
- (void)getAllDataWithREM:(void (^ _Nonnull)(NSArray<StepModel *> * _Nonnull, NSArray<SleepModel *> * _Nonnull, enum CRPError))handler;
- (void)getFeatures:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getBattery:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getSoftver:(void (^ _Nonnull)(NSString * _Nonnull, enum CRPError))handler;
- (void)getGoal:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getDominantHand:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getProfile:(void (^ _Nonnull)(ProfileModel * _Nonnull, enum CRPError))handler;
- (void)getDial:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getLanguage:(void (^ _Nonnull)(NSInteger, enum CRPError))handler :(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))supportLanguagesHander;
- (void)getRemindersToMove:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getAlarms:(void (^ _Nonnull)(NSArray<AlarmModel *> * _Nonnull, enum CRPError))handler;
- (void)getQuickView:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getUnit:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getTimeformat:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getMac:(void (^ _Nonnull)(NSString * _Nonnull, enum CRPError))handler;
- (void)getNotifications:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getViews:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)get24HourHeartRateInterval:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)get24HourHeartRate:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getAgo24HourHeartRate:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getFullDayHeartRate:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getQuickViewTime:(void (^ _Nonnull)(periodTimeModel * _Nonnull, enum CRPError))handler;
- (void)getDisturbTime:(void (^ _Nonnull)(periodTimeModel * _Nonnull, enum CRPError))handler;
- (void)getScreenContent:(void (^ _Nonnull)(ScreenContent * _Nonnull, ScreenImageSize * _Nonnull, NSInteger, enum CRPError))handler;
- (void)getConnectedBand:(SWIFT_NOESCAPE void (^ _Nonnull)(NSArray<CBPeripheral *> * _Nonnull, enum CRPError))handler;
- (void)getHeartData;
- (void)getPhysiological:(void (^ _Nonnull)(Physiological * _Nonnull, enum CRPError))handler;
- (void)getSitRemindInfo:(void (^ _Nonnull)(SitRemindModel * _Nonnull, enum CRPError))handler;
- (void)setFindDevice;
- (void)setQuickView:(BOOL)isOn;
- (void)setTimeFormat:(NSInteger)type;
- (void)setDominantHand:(NSInteger)type;
- (void)setDial:(NSInteger)type;
- (void)setUnit:(NSInteger)unit;
- (void)setNotification:(NSArray<NSNumber *> * _Nonnull)switchs;
- (void)setRemindersToMove:(BOOL)isOn;
- (void)setProfile:(ProfileModel * _Nonnull)profile;
- (void)setGoal:(NSInteger)goal;
- (void)sendCalibration;
- (void)setLanguage:(NSInteger)lang;
- (void)setLanguageVersion:(BOOL)isChinese;
- (void)setStartHeart;
- (void)setStopHeart;
- (void)setStartSingleHR;
- (void)setStopSingleHR;
- (void)setStartSpO2;
- (void)setStopSpO2;
- (void)setStartBlood;
- (void)setStopBlood;
- (void)setCalibrationBlood:(NSInteger)heartRate :(NSInteger)SBP :(NSInteger)DBP;
- (void)setMessage:(NSString * _Nonnull)message;
- (void)setViews:(NSArray<NSNumber *> * _Nonnull)views;
- (void)set24HourHeartRate:(NSInteger)interval;
- (void)setAlarm:(AlarmModel * _Nonnull)alarm;
- (void)setWeather:(weather * _Nonnull)weather;
- (void)setForecastWeather:(NSArray<forecastWeather *> * _Nonnull)weathers;
- (void)setQuickViewTime:(periodTimeModel * _Nonnull)periodTime;
- (void)setDisturbTime:(periodTimeModel * _Nonnull)periodTime;
- (void)setSitRemind:(SitRemindModel * _Nonnull)sitRemind;
- (void)checkLatest:(NSString * _Nonnull)version :(NSString * _Nonnull)mac handler:(void (^ _Nonnull)(newVersionInfo * _Nullable, newVersionTpInfo * _Nullable, enum CRPError))handler;
- (void)startUpgredeWithInfo:(newVersionInfo * _Nonnull)info;
- (void)startUpgradeFromFileWithPath:(NSString * _Nonnull)path;
- (void)startGoodixUpgradeFromFileWithZipPath:(NSString * _Nonnull)zipPath;
- (void)checkDFUState:(void (^ _Nonnull)(NSString * _Nonnull, enum CRPError))handler;
- (void)stopUpgrade;
- (void)startChangeScreen:(UIImage * _Nonnull)image :(ScreenImageSize * _Nonnull)imageSize :(BOOL)isCricle :(NSInteger)compressionType;
- (void)stopChangeScreen;
- (void)setupScreenContentWithContent:(ScreenContent * _Nonnull)content;
- (void)setStepLengthWithLength:(NSInteger)length;
- (void)setTime:(NSInteger)timestamp;
- (void)switchCameraView;
- (NSArray<CBPeripheral *> * _Nonnull)connectedPeripherial SWIFT_WARN_UNUSED_RESULT;
- (void)shutDown;
- (void)getWatchFaceSupportModel:(void (^ _Nonnull)(watchFaceSupportModel * _Nonnull, enum CRPError))handler;
- (void)getWatchFaceInfo:(NSArray<NSNumber *> * _Nonnull)supportModel currentPage:(NSInteger)currentPage perPage:(NSInteger)perPage :(void (^ _Nonnull)(NSArray<watchFaceInfo *> * _Nonnull, NSInteger, NSInteger, enum CRPError))handler;
- (void)startChangeWatchFace:(watchFaceInfo * _Nonnull)Info :(NSInteger)watchFaceID;
- (void)startChangeWatchFaceFromFileWithPath:(NSString * _Nonnull)path :(NSInteger)watchFaceID;
- (void)stopChangeWatchFace;
- (void)getOTAMac:(void (^ _Nonnull)(NSString * _Nonnull, enum CRPError))handler;
- (void)startHTXOTAWithInfo:(newVersionInfo * _Nonnull)info upgradeMac:(NSString * _Nonnull)upgradeMac isUser:(BOOL)isUser :(BOOL)isPatch;
- (void)stopHTXOTA;
- (void)HTXConnectWithDiscovery:(CRPDiscovery * _Nonnull)discovery isFromLocal:(BOOL)isFromLocal url:(NSString * _Nonnull)url isUser:(BOOL)isUser;
- (void)startOTAFromFileWithMac:(NSString * _Null_unspecified)mac zipFilePath:(NSString * _Nonnull)zipFilePath isUser:(BOOL)isUser :(BOOL)isPatch;
- (void)reconnectHTXWithOTAMac:(NSString * _Nonnull)OTAMac;
- (void)HTXScan;
- (void)getWatchFaceInfoByID:(NSInteger)id :(void (^ _Nonnull)(NSArray<watchFaceInfo *> * _Nonnull, NSInteger, NSInteger, enum CRPError))handler;
- (void)fatigueReminder;
- (void)get24HourSteps:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getAgo24HourSteps:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)setPhysiological:(Physiological * _Nonnull)physiological;
- (void)startECGMeasure;
- (void)stopECGMeasure;
- (BOOL)isNewECGMeasurementVersion SWIFT_WARN_UNUSED_RESULT;
- (void)getLastMeasureECGData;
- (void)sendECGHeartRateWithHeartRate:(NSInteger)heartRate;
- (void)getAutoTemperatureState:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)sendAutoTemperature:(BOOL)isOpen;
- (void)sendSingleTemperatureStart;
- (void)sendSingleTemperatureEnd;
- (void)getAutoTemperatureData:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))todayHandler :(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))yesterdayHandler;
- (void)sendFirstConnect;
- (void)sendCityName:(NSString * _Nonnull)cityName;
- (void)getAutoLockTime:(void (^ _Nonnull)(CRPAutoLockTimeModel * _Nonnull, enum CRPError))handler;
- (void)sendAutoLockTime:(NSInteger)time;
- (void)stopFindPhone;
- (void)sendFindingPhone;
- (void)getHeartRateRemind:(void (^ _Nonnull)(hrRemind * _Nonnull, enum CRPError))handler;
- (void)sendHeartRateRemind:(hrRemind * _Nonnull)remind;
- (void)getHandWashRemind:(void (^ _Nonnull)(eventRemind * _Nonnull, enum CRPError))handler;
- (void)sendHandWashRemind:(eventRemind * _Nonnull)remind;
- (void)getDrinkWaterRemind:(void (^ _Nonnull)(drinkWaterRemind * _Nonnull, enum CRPError))handler;
- (void)sendDrinkWaterRemind:(drinkWaterRemind * _Nonnull)remind;
- (void)getTemperatureUnit:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setTemperatureUnit:(NSInteger)unit;
- (void)startRealTekUpgradeWithInfo:(newVersionInfo * _Nonnull)info timeoutInterval:(NSTimeInterval)timeoutInterval;
- (void)startRealTekUpgradeFromFileWithPath:(NSString * _Nonnull)path timeoutInterval:(NSTimeInterval)timeoutInterval;
- (void)getAutoO2Interval:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setAutoO2:(NSInteger)interval;
- (void)getAutoO2Data:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))todayHandler :(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))yesterdayHandler;
- (void)getContactProfile:(void (^ _Nonnull)(contactProfileModel * _Nonnull, enum CRPError))handler;
- (void)setContactWithProfile:(contactProfileModel * _Nonnull)profile contacts:(NSArray<CRPContact *> * _Nonnull)contacts;
- (void)cleanAllContact;
- (void)deleteContactWithContactID:(NSInteger)contactID;
- (void)getContactSupportVer:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)startTpUpgradeWithTpInfo:(newVersionTpInfo * _Nullable)tpInfo;
- (void)startTpUpgradeFromFileWithPath:(NSString * _Nonnull)path :(NSInteger)offset;
- (void)setHRV:(NSInteger)interval;
- (void)getHRVInterval:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getHRVCount:(NSInteger)dayIndex :(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getHRVData:(NSInteger)dayIndex :(NSInteger)index :(void (^ _Nonnull)(CRPHRVDataModel * _Nonnull, enum CRPError))handler;
- (void)startHRVMeasure;
- (void)stopHRVMeasure;
- (void)reset;
- (void)setPowerSaveStateWithOpen:(BOOL)open;
- (void)getPowerSaveState:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getContactCount:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)exitCameraView;
- (void)setFullDayO2StatusWithOpen:(BOOL)open;
- (void)getFullDayO2Status:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getFullDayO2Data:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)setFullDayBPStatusWithOpen:(BOOL)open;
- (void)getFullDayBPStatus:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getFullDayBPData:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)setFullDayTemperatureStatusWithOpen:(BOOL)open;
- (void)getFullDayTemperatureStatus:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getFullDayTemperatureData:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getMedicineInfo;
- (void)setMedicineWithMedicine:(CRPMedicineReminderModel * _Nonnull)medicine;
- (void)deleteMedicineWithId:(NSInteger)id;
- (void)deleteAllMedicine;
- (void)getHeartRecordData:(void (^ _Nonnull)(NSArray<CRPHeartRecordModel *> * _Nonnull, enum CRPError))handler;
- (void)getBPRecordData:(void (^ _Nonnull)(NSArray<CRPBPRecordModel *> * _Nonnull, enum CRPError))handler;
- (void)getO2RecordData:(void (^ _Nonnull)(NSArray<CRPO2RecordModel *> * _Nonnull, enum CRPError))handler;
- (void)setTapToWakeWithOpen:(BOOL)open;
- (void)readTapToWake:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getSportRecordList;
- (void)getSportRecordDataWithId:(NSInteger)id :(void (^ _Nonnull)(CRPNewSportModel * _Nonnull, enum CRPError))handler;
- (void)setSportStateWithState:(enum SportType)state;
- (void)setNewVerWeatherWithWeather:(CRPNewWeather * _Nonnull)weather;
- (void)getTalkBluetoothConnectState:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setA2DPControlWithState:(NSInteger)state;
- (void)getTalkBluetoothName:(void (^ _Nonnull)(NSString * _Nonnull, enum CRPError))handler;
- (void)connectConfirmWithData:(NSArray<NSNumber *> * _Nonnull)data;
- (void)connectConfirmByRandomCodeWithRandomCode:(NSInteger)randomCode;
- (void)setPairReplyWithAllow:(BOOL)allow;
- (void)getNotificationSupportType:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getNotificationState:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)setNotificationState:(NSArray<NSNumber *> * _Nonnull)states;
- (void)setNewVerAlarm:(AlarmModel * _Nonnull)alarm;
- (void)setNewVerAddAlarm:(AlarmModel * _Nonnull)alarm;
- (void)setNewVerDeleteAlarm:(NSInteger)id;
- (void)setNewVerDeleteAllAlarm;
- (void)getNewVerAlarm:(void (^ _Nonnull)(NSArray<AlarmModel *> * _Nonnull, enum CRPError))handler;
- (void)getStressIsSupport:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setStartStress;
- (void)setStopStress;
- (void)getStressRecord:(void (^ _Nonnull)(NSArray<CRPStressRecordModel *> * _Nonnull, enum CRPError))handler;
- (void)getHRVIsSupport:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setStartHRV;
- (void)setStopHRV;
- (void)getHRVRecord:(void (^ _Nonnull)(NSArray<CRPHRVRecordModel *> * _Nonnull, enum CRPError))handler;
- (void)setNormalExerciseGoal:(CRPExerciseGoalsModel * _Nonnull)goals;
- (void)getNormalExerciseGoal:(void (^ _Nonnull)(CRPExerciseGoalsModel * _Nonnull, enum CRPError))handler;
- (void)setExerciseDayGoal:(CRPExerciseGoalsModel * _Nonnull)goals;
- (void)getExerciseDayGoal:(void (^ _Nonnull)(CRPExerciseGoalsModel * _Nonnull, enum CRPError))handler;
- (void)setExerciseState:(CRPExerciseGoalStateModel * _Nonnull)state;
- (void)getExerciseState:(void (^ _Nonnull)(CRPExerciseGoalStateModel * _Nonnull, enum CRPError))handler;
- (void)setECardWithProfile:(CRPEcardProfileModel * _Nonnull)profile eCard:(CRPECard * _Nonnull)eCard;
- (void)deleteECardWithId:(NSInteger)id;
- (void)getECardProfileWithHandler:(void (^ _Nonnull)(CRPEcardProfileModel * _Nonnull, enum CRPError))handler;
- (void)getECardInfoWithId:(NSInteger)id :(void (^ _Nonnull)(CRPECard * _Nonnull, enum CRPError))handler;
- (void)setECardSequenceArrayWithIds:(NSArray<NSNumber *> * _Nonnull)ids;
- (void)getGPSDataRecordList;
- (void)getGPSRecordDataWithTime:(NSInteger)time :(void (^ _Nonnull)(NSInteger, NSArray<NSValue *> * _Nonnull, enum CRPError))handler;
- (void)startSyncEPOWithPath:(NSString * _Nonnull)path type:(NSInteger)type;
- (void)syncGPSAuxiliaryWithLocal:(CLLocationCoordinate2D)local;
- (void)getHistoryStepDataWithDay:(NSInteger)day handler:(void (^ _Nonnull)(NSInteger, StepModel * _Nonnull, enum CRPError))handler;
- (void)getHistorySleepDataWithDay:(NSInteger)day handler:(void (^ _Nonnull)(NSInteger, SleepModel * _Nonnull, enum CRPError))handler;
- (void)getHistoryHrDataWithDay:(NSInteger)day handler:(void (^ _Nonnull)(NSInteger, NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)setVibrationStrengthWithType:(NSInteger)type;
- (void)getVibrationStrengthWithHandler:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setSleepTimeWithInfo:(CRPSleepDetectionInfo * _Nonnull)info;
- (void)getSleepTimeWithHandler:(void (^ _Nonnull)(CRPSleepDetectionInfo * _Nonnull, enum CRPError))handler;
- (void)get24HourCals:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getAgo24HourCals:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)get24HourDistances:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getAgo24HourDistances:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getAutoStressInterval:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setAutoStress:(NSInteger)interval;
- (void)getTodayAutoStressData:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (void)getYesterDayAutoStressData:(void (^ _Nonnull)(NSArray<NSNumber *> * _Nonnull, enum CRPError))handler;
- (NSArray<CBPeripheral *> * _Nonnull)retrievePeripheralsWithIdentifier:(NSUUID * _Nonnull)identifier SWIFT_WARN_UNUSED_RESULT;
- (void)getUDTMaxSize:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)removeBond;
- (void)getDeviceMode:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setDeviceUserMode;
- (void)getDevicePlatformInfo:(void (^ _Nonnull)(CRPPlatformModel * _Nonnull, enum CRPError))handler;
- (void)getJLScreenMarketVersionInfo:(void (^ _Nonnull)(CRPScreenMarketVersionModel * _Nonnull, enum CRPError))handler;
- (void)getNewWatchFaceTagListWithSupportModel:(NSArray<NSNumber *> * _Nonnull)supportModel ver:(NSString * _Nonnull)ver currentPage:(NSInteger)currentPage perPage:(NSInteger)perPage memorySize:(NSInteger)memorySize platform:(enum CRPPlatform)platform model:(CRPScreenMarketVersionModel * _Nonnull)model :(void (^ _Nonnull)(NSArray<CRPScreenTagModel *> * _Nonnull, enum CRPError))handler;
- (void)getNewWatchFaceListWithTag_id:(NSInteger)tag_id ver:(NSString * _Nonnull)ver supportModel:(NSArray<NSNumber *> * _Nonnull)supportModel currentPage:(NSInteger)currentPage perPage:(NSInteger)perPage memorySize:(NSInteger)memorySize platform:(enum CRPPlatform)platform model:(CRPScreenMarketVersionModel * _Nonnull)model :(void (^ _Nonnull)(NSArray<CRPScreenModel *> * _Nonnull, enum CRPError))handler;
- (void)getNewWatchFaceInfoWithScreenId:(NSInteger)screenId ver:(NSString * _Nonnull)ver supportModel:(NSArray<NSNumber *> * _Nonnull)supportModel memorySize:(NSInteger)memorySize platform:(enum CRPPlatform)platform model:(CRPScreenMarketVersionModel * _Nonnull)model :(void (^ _Nonnull)(CRPScreenModelInfo * _Nullable, enum CRPError))handler;
- (void)getNewWatchFaceSupportModel:(void (^ _Nonnull)(CRPNewWatchFaceSupportModel * _Nonnull, enum CRPError))handler;
- (void)deleteCalendarWithId:(NSInteger)id;
- (void)deleteAllCalendar;
- (void)getWorldClockInfo:(void (^ _Nonnull)(CRPWorldClockProfileModel * _Nonnull, enum CRPError))handler;
- (void)getWorldClockDetailWithId:(NSInteger)id :(void (^ _Nonnull)(CRPWorldClockModel * _Nonnull, enum CRPError))handler;
- (void)setWorldClockWithWorldClock:(CRPWorldClockModel * _Nonnull)worldClock;
- (void)deleteWorldClockWithId:(NSInteger)id;
- (void)setWorldClockSequenceWithIds:(NSArray<NSNumber *> * _Nonnull)ids;
- (void)setClearWorldClock;
- (void)getBrightnessInfo:(void (^ _Nonnull)(CRPBrightnessModel * _Nonnull, enum CRPError))handler;
- (void)setBrightnessWithValue:(NSInteger)value;
- (void)getEmergencyContact:(void (^ _Nonnull)(CRPEmergencyContact * _Nonnull, enum CRPError))handler;
- (void)setEmergencyContactWithContact:(CRPEmergencyContact * _Nonnull)contact;
- (void)setDrinkWaterGoalWithGoal:(NSInteger)goal;
- (void)getDrinkWaterGoal:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setTodayDrinkWaterTotalValueWithValue:(NSInteger)value;
- (void)getTodayDrinkWaterTotalValue:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)addDrinkWaterWithRecord:(CRPNewDrinkWaterRecord * _Nonnull)record;
- (void)modifyDrinkWaterWithSource:(enum CRPDrinkWaterSource)source record:(CRPNewDrinkWaterRecord * _Nonnull)record;
- (void)deleteDrinkWaterWithSource:(enum CRPDrinkWaterSource)source recordID:(NSInteger)recordID;
- (void)getDrinkWaterRecord:(void (^ _Nonnull)(NSArray<CRPNewDrinkWaterRecord *> * _Nonnull, enum CRPError))handler;
- (void)setDrinkWaterRecordWithRecords:(NSArray<CRPNewDrinkWaterRecord *> * _Nonnull)records;
- (void)readNewDrinkWaterRemind:(void (^ _Nonnull)(CRPNewDrinkWaterRemind * _Nonnull, enum CRPError))handler;
- (void)setNewDrinkWaterRemindWithModel:(CRPNewDrinkWaterRemind * _Nonnull)model;
- (void)setSOSSwitchWithOpen:(BOOL)open;
- (void)getSOSSwitch:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)getStockSupportInfo:(void (^ _Nonnull)(NSInteger, enum CRPError))handler;
- (void)setNullStockData;
- (void)setStockDataWithData:(CRPStockSelectionModel * _Nonnull)data;
- (void)deleteStockWithId:(NSInteger)id;
- (void)setStockSequenceWithIds:(NSArray<NSNumber *> * _Nonnull)ids;
- (void)getGPTSupportType:(void (^ _Nonnull)(enum GPTShowType, enum CRPError))handler;
- (void)setGPTStateWithType:(enum CRPGPTType)type state:(enum CRPGPTReplyState)state;
- (void)setGPTQuestionWithType:(enum CRPGPTType)type content:(NSString * _Nonnull)content;
- (void)setGPTAnswerWithContent:(NSString * _Nonnull)content;
- (void)setGPTPreImageWithImage:(UIImage * _Nonnull)image;
- (void)stopGPTPreImage;
- (void)startGPTScreen:(UIImage * _Nonnull)image :(ScreenImageSize * _Nonnull)imageSize :(BOOL)isCricle :(NSInteger)compressionType;
- (void)stopGPTScreen;
- (void)getGPTScreenContent:(void (^ _Nonnull)(ScreenContent * _Nonnull, ScreenImageSize * _Nonnull, NSInteger, enum CRPError))handler;
- (void)setupGPTScreenContentWithContent:(ScreenContent * _Nonnull)content;
@end


SWIFT_CLASS("_TtC12CRPSmartBand21CRPSpeechToTextManage")
@interface CRPSpeechToTextManage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface CRPSpeechToTextManage (SWIFT_EXTENSION(CRPSmartBand))
- (void)recognizePcm;
@end


SWIFT_CLASS("_TtC12CRPSmartBand14CRPSportRecord")
@interface CRPSportRecord : NSObject
@property (nonatomic) NSInteger id;
@property (nonatomic) NSInteger startTime;
@property (nonatomic) NSInteger type;
- (nonnull instancetype)initWithId:(NSInteger)id startTime:(NSInteger)startTime type:(NSInteger)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, CRPSportState, open) {
  CRPSportStateUnStart = 0,
  CRPSportStateExercising = 1,
  CRPSportStatePause = 2,
};

typedef SWIFT_ENUM(NSInteger, CRPState, open) {
  CRPStateUnbind = 0,
  CRPStateConnecting = 1,
  CRPStateConnected = 2,
  CRPStateDisconnecting = 3,
  CRPStateDisconnected = 4,
  CRPStateSyncing = 5,
  CRPStateSyncSuccess = 6,
  CRPStateSyncError = 7,
};


SWIFT_CLASS("_TtC12CRPSmartBand22CRPStockSelectionModel")
@interface CRPStockSelectionModel : NSObject
@property (nonatomic) NSInteger id;
/// Opening price
@property (nonatomic) double regularMarketOpen;
/// Highest price
@property (nonatomic) double regularMarketDayHigh;
/// lowest price
@property (nonatomic) double regularMarketDayLow;
/// Volume
@property (nonatomic) NSInteger regularMarketVolume;
/// P/E ratio
@property (nonatomic) double peRatio;
/// Market value
@property (nonatomic) NSInteger marketCap;
/// 52-week highest price
@property (nonatomic) double fiftyTwoWeekHigh;
/// 52-week lowest price
@property (nonatomic) double fiftyTwoWeekLow;
/// Average trading volume
@property (nonatomic) NSInteger averageDailyVolume3Month;
/// Closing price
@property (nonatomic) double regularMarketPrice;
/// Currency
@property (nonatomic, copy) NSString * _Nonnull currency;
/// Abbreviation
@property (nonatomic, copy) NSString * _Nonnull shortName;
/// Keywords
@property (nonatomic, copy) NSString * _Nonnull symbol;
/// Exchange abbreviation
@property (nonatomic, copy) NSString * _Nonnull exchange;
/// Yesterday’s closing price
@property (nonatomic) double regularMarketPreviousClose;
/// Whether to open
@property (nonatomic) BOOL isOpen;
- (nonnull instancetype)initWithId:(NSInteger)id regularMarketOpen:(double)regularMarketOpen regularMarketDayHigh:(double)regularMarketDayHigh regularMarketDayLow:(double)regularMarketDayLow regularMarketVolume:(NSInteger)regularMarketVolume peRatio:(double)peRatio marketCap:(NSInteger)marketCap fiftyTwoWeekHigh:(double)fiftyTwoWeekHigh fiftyTwoWeekLow:(double)fiftyTwoWeekLow averageDailyVolume3Month:(NSInteger)averageDailyVolume3Month regularMarketPrice:(double)regularMarketPrice currency:(NSString * _Nonnull)currency shortName:(NSString * _Nonnull)shortName symbol:(NSString * _Nonnull)symbol exchange:(NSString * _Nonnull)exchange regularMarketPreviousClose:(double)regularMarketPreviousClose isOpen:(BOOL)isOpen OBJC_DESIGNATED_INITIALIZER;
- (void)printDetail;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand20CRPStressRecordModel")
@interface CRPStressRecordModel : NSObject
@property (nonatomic) NSInteger value;
@property (nonatomic) NSInteger time;
- (nonnull instancetype)initWithValue:(NSInteger)value time:(NSInteger)time OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC12CRPSmartBand18CRPUDTVersionModel")
@interface CRPUDTVersionModel : NSObject
@property (nonatomic) NSInteger udtMaxSize;
@property (nonatomic, copy) NSString * _Nonnull udtVersion;
- (nonnull instancetype)initWithUdtMaxSize:(NSInteger)udtMaxSize udtVersion:(NSString * _Nonnull)udtVersion OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand10CRPUpgrade")
@interface CRPUpgrade : NSObject
@property (nonatomic, copy) NSData * _Nonnull data;
@property (nonatomic) uint16_t crc_last;
@property (nonatomic) NSInteger totalParts;
@property (nonatomic) NSInteger part;
@property (nonatomic) NSInteger last_index;
@property (nonatomic, copy) NSString * _Null_unspecified ver;
@property (nonatomic, copy) NSString * _Nonnull verNumber;
@property (nonatomic, copy) NSString * _Null_unspecified fileUrl;
@property (nonatomic, copy) NSURL * _Null_unspecified filePath;
@property (nonatomic, copy) void (^ _Null_unspecified handler)(newVersionInfo * _Nullable, newVersionTpInfo * _Nullable, enum CRPError);
@property (nonatomic) NSInteger pkgSize;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CRPUpgrade * _Nonnull sharedInstance;)
+ (CRPUpgrade * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)load:(NSURL * _Nonnull)url :(NSInteger)index;
- (NSArray<NSNumber *> * _Nonnull)getsub:(NSInteger)i SWIFT_WARN_UNUSED_RESULT;
- (void)calLastCrc;
- (void)stop;
- (uint16_t)crc16Compute:(NSData * _Nonnull)p_data :(uint16_t)c SWIFT_WARN_UNUSED_RESULT;
- (void)checkLatest:(NSString * _Nonnull)version :(NSString * _Nonnull)mac;
- (void)returnInfo:(newVersionInfo * _Nullable)info tpInfo:(newVersionTpInfo * _Nullable)tpInfo;
- (void)startUpgradeWithInfo:(newVersionInfo * _Nullable)info;
- (void)startUpgradeFromFileWithPath:(NSString * _Nonnull)path;
- (void)doUpgrade;
- (NSString * _Nonnull)unZipDataWithZipPath:(NSString * _Nonnull)zipPath upgradeType:(NSInteger)upgradeType SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nullable)getAllfirePathWithDirPath:(NSString * _Nonnull)dirPath SWIFT_WARN_UNUSED_RESULT;
- (void)goodixstartUpgradeWithZipPath:(NSString * _Nonnull)zipPath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, CRPUpgradeState, open) {
  CRPUpgradeStateUploading = 0,
  CRPUpgradeStateCompleted = 1,
  CRPUpgradeStateFailed = 2,
};


SWIFT_CLASS("_TtC12CRPSmartBand12CRPUpgradeUI")
@interface CRPUpgradeUI : NSObject
@property (nonatomic, copy) NSData * _Nonnull data;
@property (nonatomic) uint16_t crc_last;
@property (nonatomic) NSInteger totalParts;
@property (nonatomic) NSInteger part;
@property (nonatomic) NSInteger last_index;
@property (nonatomic, copy) NSString * _Null_unspecified ver;
@property (nonatomic, copy) NSString * _Nonnull verNumber;
@property (nonatomic) NSInteger current_position;
@property (nonatomic) NSInteger count;
@property (nonatomic, copy) NSString * _Null_unspecified fileUrl;
@property (nonatomic, copy) NSURL * _Null_unspecified filePath;
@property (nonatomic) NSInteger bandStartPosition;
@property (nonatomic) NSInteger upgradeCount;
@property (nonatomic) NSInteger pkgSize;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CRPUpgradeUI * _Nonnull sharedInstance;)
+ (CRPUpgradeUI * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)load:(NSURL * _Nonnull)url :(NSInteger)index;
- (NSArray<NSNumber *> * _Nonnull)getsub:(NSInteger)i SWIFT_WARN_UNUSED_RESULT;
- (void)calLastCrc;
- (void)stop;
- (uint16_t)crc16Compute:(NSData * _Nonnull)p_data :(uint16_t)c SWIFT_WARN_UNUSED_RESULT;
- (void)checkLatest:(NSString * _Nonnull)version :(NSString * _Nonnull)mac;
- (void)returnInfo:(newVersionInfo * _Nullable)info;
- (void)startUpgrade:(NSString * _Nonnull)fileUrlString bandStartPosition:(NSInteger)bandStartPosition;
- (void)doUpgrade;
- (void)startUpgradeFromFileWithPath:(NSString * _Nonnull)path position:(NSInteger)position upgradeCount:(NSInteger)upgradeCount bandStartPosition:(NSInteger)bandStartPosition;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12CRPSmartBand21CRPUploadTaskDelegate")
@interface CRPUploadTaskDelegate : CRPDataTaskDelegate
@end

typedef SWIFT_ENUM(NSInteger, CRPWeekDay, open) {
  CRPWeekDayNone = 0,
  CRPWeekDayMon = 1,
  CRPWeekDayTue = 2,
  CRPWeekDayWed = 3,
  CRPWeekDayThu = 4,
  CRPWeekDayFri = 5,
  CRPWeekDaySat = 6,
  CRPWeekDaySun = 7,
};


SWIFT_CLASS("_TtC12CRPSmartBand18CRPWorldClockModel")
@interface CRPWorldClockModel : NSObject
@property (nonatomic) NSInteger id;
@property (nonatomic) NSInteger timeInterval;
@property (nonatomic, copy) NSString * _Nonnull cityName;
@property (nonatomic) double longitude;
@property (nonatomic) double latitude;
- (nonnull instancetype)initWithId:(NSInteger)id timeInterval:(NSInteger)timeInterval cityName:(NSString * _Nonnull)cityName longitude:(double)longitude latitude:(double)latitude OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand25CRPWorldClockProfileModel")
@interface CRPWorldClockProfileModel : NSObject
@property (nonatomic, readonly) NSInteger limitCount;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull ids;
- (nonnull instancetype)initWithLimitCount:(NSInteger)limitCount ids:(NSArray<NSNumber *> * _Nonnull)ids OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand13CommandPacket")
@interface CommandPacket : NSObject
@property (nonatomic) uint8_t mCmd;
@property (nonatomic) NSInteger mLength;
@property (nonatomic, strong) NSMutableData * _Nonnull data;
- (nonnull instancetype)initWithMCmd:(uint8_t)mCmd mLength:(NSInteger)mLength data:(NSMutableData * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Content, open) {
  ContentNone = 0,
  ContentDate = 1,
  ContentSleep = 2,
  ContentHr = 3,
  ContentSteps = 4,
};

typedef SWIFT_ENUM(NSInteger, ContentPosition, open) {
  ContentPositionUpper = 0,
  ContentPositionUnder = 1,
};


SWIFT_CLASS("_TtC12CRPSmartBand11DyHeartData")
@interface DyHeartData : NSObject
@property (nonatomic, strong) NSMutableData * _Null_unspecified nsdata;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull hearts;
@property (nonatomic) NSInteger startTime;
@property (nonatomic, copy) NSDictionary<NSNumber *, NSArray<NSNumber *> *> * _Nonnull heartMap;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DyHeartData * _Nonnull sharedInstance;)
+ (DyHeartData * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)unpack:(NSMutableData * _Nonnull)nsdata :(SWIFT_NOESCAPE void (^ _Nonnull)(HeartModel * _Nonnull))handler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GPTShowType, open) {
  GPTShowTypeNone = 0,
  GPTShowTypeDaGPT = 1,
  GPTShowTypeAIWatch = 2,
  GPTShowTypeDaGPTWithAIWatch = 3,
};

typedef SWIFT_ENUM(NSInteger, GenderOption, open) {
  GenderOptionMale = 0,
  GenderOptionFemale = 1,
};

@class CBDescriptor;

SWIFT_CLASS("_TtC12CRPSmartBand6HTXBle")
@interface HTXBle : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForDescriptor:(CBDescriptor * _Nonnull)descriptor error:(NSError * _Nullable)error;
@end


SWIFT_CLASS("_TtC12CRPSmartBand10HTXUpgrade")
@interface HTXUpgrade : NSObject <OtaDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)packetDataCallBack:(NSMutableData * _Null_unspecified)data charcType:(typeCode)charcType;
- (void)progressCallBack:(float)progress;
- (void)readAddrCallBack:(typeCode)type Addr:(int32_t)addr Length:(int32_t)length;
@end


SWIFT_CLASS("_TtC12CRPSmartBand11Heart24Data")
@interface Heart24Data : NSObject
@property (nonatomic, strong) NSMutableData * _Null_unspecified nsdata;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull heart1;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull heart2;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull heart3;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull heart4;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull hearts;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull yesterdayHearts;
@property (nonatomic, copy) NSDictionary<NSNumber *, NSArray<NSNumber *> *> * _Nonnull heartMap;
@property (nonatomic, readonly, copy) NSString * _Nonnull languageCode;
@property (nonatomic, readonly, copy) NSString * _Nonnull regionCode;
@property (nonatomic, copy) NSDictionary<NSNumber *, NSArray<NSNumber *> *> * _Nonnull historyHrsMap;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Heart24Data * _Nonnull sharedInstance;)
+ (Heart24Data * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)save:(NSArray<NSNumber *> * _Nonnull)bytes;
- (void)saveFullHr:(NSArray<NSNumber *> * _Nonnull)bytes;
- (void)saveHistoryAutoHR:(NSArray<NSNumber *> * _Nonnull)bytes;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12CRPSmartBand10HeartModel")
@interface HeartModel : NSObject
@property (nonatomic) double starttime;
@property (nonatomic) double endtime;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull detail;
- (nonnull instancetype)initWithStarttime:(double)starttime endtime:(double)endtime detail:(NSArray<NSNumber *> * _Nonnull)detail OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NSMutableData (SWIFT_EXTENSION(CRPSmartBand))
- (void)appendBytes:(NSArray<NSNumber *> * _Nonnull)arrayOfBytes;
@end


typedef SWIFT_ENUM(NSInteger, NotificationType, open) {
  NotificationTypePhone = 0,
  NotificationTypeMessages = 1,
  NotificationTypeWechat = 2,
  NotificationTypeQq = 3,
  NotificationTypeFacebook = 4,
  NotificationTypeTwitter = 5,
  NotificationTypeInstagram = 6,
  NotificationTypeSkype = 7,
  NotificationTypeWhatsApp = 8,
  NotificationTypeLine = 9,
  NotificationTypeKakaoTalk = 10,
  NotificationTypeEmail = 11,
  NotificationTypeMessenger = 12,
  NotificationTypeZalo = 13,
  NotificationTypeTelegram = 14,
  NotificationTypeViber = 15,
  NotificationTypeNateOn = 16,
  NotificationTypeGmail = 17,
  NotificationTypeCalenda = 18,
  NotificationTypeDailyHunt = 19,
  NotificationTypeOutlook = 20,
  NotificationTypeYahoo = 21,
  NotificationTypeInshorts = 22,
  NotificationTypePhonepe = 23,
  NotificationTypeGpay = 24,
  NotificationTypePaytm = 25,
  NotificationTypeSwiggy = 26,
  NotificationTypeZomato = 27,
  NotificationTypeUber = 28,
  NotificationTypeOla = 29,
  NotificationTypeReflexApp = 30,
  NotificationTypeSnapchat = 31,
  NotificationTypeYtMusic = 32,
  NotificationTypeYouTube = 33,
  NotificationTypeLinkEdin = 34,
  NotificationTypeAmazon = 35,
  NotificationTypeFlipkart = 36,
  NotificationTypeNetFlix = 37,
  NotificationTypeHotstar = 38,
  NotificationTypeAmazonPrime = 39,
  NotificationTypeGoogleChat = 40,
  NotificationTypeWynk = 41,
  NotificationTypeGoogleDrive = 42,
  NotificationTypeDunzo = 43,
  NotificationTypeGaana = 44,
  NotificationTypeMissCall = 45,
  NotificationTypeWhatsAppBusiness = 46,
  NotificationTypeDingtalk = 47,
  NotificationTypeTiktok = 48,
  NotificationTypeLyft = 49,
  NotificationTypeMail = 50,
  NotificationTypeGoogleMaps = 51,
  NotificationTypeSlack = 52,
  NotificationTypeMicrosoftTeams = 53,
  NotificationTypeMormaiiSmartwatches = 54,
  NotificationTypeReddit = 55,
  NotificationTypeDiscord = 56,
  NotificationTypeCalendar = 57,
  NotificationTypeGojek = 58,
  NotificationTypeLark = 59,
  NotificationTypeGarb = 60,
  NotificationTypeShopee = 61,
  NotificationTypeTokopedia = 62,
  NotificationTypeOthers = 0x80,
};


SWIFT_CLASS("_TtC12CRPSmartBand13Physiological")
@interface Physiological : NSObject
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull reminderModels;
@property (nonatomic) NSInteger cycleTime;
@property (nonatomic) NSInteger menstruationTime;
@property (nonatomic) NSInteger lastTimeMonth;
@property (nonatomic) NSInteger lastTimeDay;
@property (nonatomic) NSInteger remindTimeHour;
@property (nonatomic) NSInteger remindTimeMinute;
- (nonnull instancetype)initWithReminderModels:(NSArray<NSNumber *> * _Nonnull)reminderModels cycleTime:(NSInteger)cycleTime menstruationTime:(NSInteger)menstruationTime lastTimeMonth:(NSInteger)lastTimeMonth lastTimeDay:(NSInteger)lastTimeDay remindTimeHour:(NSInteger)remindTimeHour remindTimeMinute:(NSInteger)remindTimeMinute OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand12ProfileModel")
@interface ProfileModel : NSObject
@property (nonatomic) NSInteger height;
@property (nonatomic) NSInteger weight;
@property (nonatomic) NSInteger age;
@property (nonatomic) enum GenderOption gender;
- (nonnull instancetype)initWithHeight:(NSInteger)height weight:(NSInteger)weight age:(NSInteger)age gender:(enum GenderOption)gender OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class RTKDFUUpgrade;
@class RTKProfileConnection;
@class RTKOTAUpgradeBin;

SWIFT_CLASS("_TtC12CRPSmartBand14RealTekUpgrade")
@interface RealTekUpgrade : NSObject <RTKDFUUpgradeDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RealTekUpgrade * _Nonnull sharedInstance;)
+ (RealTekUpgrade * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Null_unspecified filePath;
@property (nonatomic, copy) NSString * _Null_unspecified fileUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)startUpgrade:(NSString * _Nullable)path timeoutInterval:(NSTimeInterval)timeoutInterval;
- (void)startUpgradeWithInfo:(newVersionInfo * _Nullable)info timeoutInterval:(NSTimeInterval)timeoutInterval;
- (void)DFUUpgrade:(RTKDFUUpgrade * _Nonnull)task didFinishUpgradeWithError:(NSError * _Nullable)error;
- (void)DFUUpgradeDidReadyForUpgrade:(RTKDFUUpgrade * _Nonnull)task;
- (void)DFUUpgrade:(RTKDFUUpgrade * _Nonnull)task withDevice:(RTKProfileConnection * _Nonnull)connection didSendBytesCount:(NSUInteger)length ofImage:(RTKOTAUpgradeBin * _Nonnull)image;
- (void)DFUUpgrade:(RTKDFUUpgrade * _Nonnull)task couldNotUpgradeWithError:(NSError * _Nonnull)error;
- (void)DFUUpgrade:(RTKDFUUpgrade * _Nonnull)task withDevice:(RTKProfileConnection * _Nonnull)connection willSendImage:(RTKOTAUpgradeBin * _Nonnull)image;
- (void)DFUUpgrade:(RTKDFUUpgrade * _Nonnull)task withDevice:(RTKProfileConnection * _Nonnull)connection didCompleteSendImage:(RTKOTAUpgradeBin * _Nonnull)image;
- (void)DFUUpgrade:(RTKDFUUpgrade * _Nonnull)task withDevice:(RTKProfileConnection * _Nonnull)connection didActivateImages:(NSSet<RTKOTAUpgradeBin *> * _Nonnull)images;
@end

@class UIColor;

SWIFT_CLASS("_TtC12CRPSmartBand13ScreenContent")
@interface ScreenContent : NSObject
@property (nonatomic) enum ContentPosition position;
@property (nonatomic) enum Content upperContent;
@property (nonatomic) enum Content underContent;
@property (nonatomic, strong) UIColor * _Nonnull contentColor;
@property (nonatomic, copy) NSString * _Nonnull md5;
- (nonnull instancetype)initWithPosition:(enum ContentPosition)position upperContent:(enum Content)upperContent underContent:(enum Content)underContent contentColor:(UIColor * _Nonnull)contentColor md5:(NSString * _Nonnull)md5 OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand15ScreenImageSize")
@interface ScreenImageSize : NSObject
@property (nonatomic) NSInteger originalWidth;
@property (nonatomic) NSInteger originalHeight;
@property (nonatomic) NSInteger abbreviatedWidth;
@property (nonatomic) NSInteger abbreviatedHeight;
- (nonnull instancetype)initWithOriginalWidth:(NSInteger)originalWidth originalHeight:(NSInteger)originalHeight abbreviatedWidth:(NSInteger)abbreviatedWidth abbreviatedHeight:(NSInteger)abbreviatedHeight OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand14SitRemindModel")
@interface SitRemindModel : NSObject
@property (nonatomic) NSInteger period;
@property (nonatomic) NSInteger steps;
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger endHour;
- (nonnull instancetype)initWithPeriod:(NSInteger)period steps:(NSInteger)steps startHour:(NSInteger)startHour endHour:(NSInteger)endHour OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand10SleepModel")
@interface SleepModel : NSObject
@property (nonatomic) NSInteger deep;
@property (nonatomic) NSInteger light;
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull detail;
@property (nonatomic) NSInteger timestamp;
- (nonnull instancetype)initWithDeep:(NSInteger)deep light:(NSInteger)light detail:(NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)detail OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand9SportData")
@interface SportData : NSObject
@property (nonatomic, strong) NSMutableData * _Null_unspecified nsdata;
@property (nonatomic, readonly, copy) NSString * _Nonnull languageCode;
@property (nonatomic) NSInteger avg;
@property (nonatomic, copy) NSArray<SportModel *> * _Nonnull sportData;
@property (nonatomic, copy) NSDictionary<NSNumber *, SportModel *> * _Nonnull sportDetail;
@property (nonatomic, copy) NSDictionary<NSNumber *, NSArray<NSNumber *> *> * _Nonnull sportHeartRate;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SportData * _Nonnull sharedInstance;)
+ (SportData * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)save:(Binary * _Nonnull)binary;
- (void)saveSportDetail:(Binary * _Nonnull)binary;
- (void)saveSportHeartRate:(Binary * _Nonnull)binary;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12CRPSmartBand10SportModel")
@interface SportModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull date;
@property (nonatomic) NSInteger startTime;
@property (nonatomic) NSInteger endTime;
@property (nonatomic) NSInteger vaildTime;
@property (nonatomic) enum SportType type;
@property (nonatomic) NSInteger step;
@property (nonatomic) NSInteger distance;
@property (nonatomic) NSInteger kcal;
- (nonnull instancetype)initWithDate:(NSString * _Nonnull)date startTime:(NSInteger)startTime endTime:(NSInteger)endTime vaildTime:(NSInteger)vaildTime type:(enum SportType)type step:(NSInteger)step distance:(NSInteger)distance kcal:(NSInteger)kcal OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, SportType, open) {
  SportTypeWalking = 0,
  SportTypeRun = 1,
  SportTypeCycling = 2,
  SportTypeSkipping = 3,
  SportTypeBadminton = 4,
  SportTypeBasketball = 5,
  SportTypeFootball = 6,
  SportTypeSwimming = 7,
  SportTypeHiking = 8,
  SportTypeTennis = 9,
  SportTypeRugby = 10,
  SportTypeGolf = 11,
  SportTypeYoga = 12,
  SportTypeWorkout = 13,
  SportTypeDance = 14,
  SportTypeBaseball = 15,
  SportTypeElliptical = 16,
  SportTypeIndoorCycling = 17,
  SportTypeTraining = 18,
  SportTypeRowingMachine = 19,
  SportTypeTrailRun = 20,
  SportTypeSki = 21,
  SportTypeBowling = 22,
  SportTypeDumbbells = 23,
  SportTypeSit_ups = 24,
  SportTypeOnfoot = 25,
  SportTypeIndoorWalk = 26,
  SportTypeIndoorRun = 27,
  SportTypeCricket = 28,
  SportTypeKabaddi = 29,
  SportTypeGps_Walking = 30,
  SportTypeGps_Run = 31,
  SportTypeGps_Cycling = 32,
  SportTypeGps_TrailRun = 33,
  SportTypeGps_Onfoot = 34,
  SportTypeSailing = 35,
  SportTypeWater_Polo = 36,
  SportTypeOther_Water_Sports = 37,
  SportTypePaddle_Boarding = 38,
  SportTypeWater_Skiing = 39,
  SportTypeKayaking = 40,
  SportTypeRafting = 41,
  SportTypeRowing = 42,
  SportTypePowerboating = 43,
  SportTypeFinswimming = 44,
  SportTypeDiving = 45,
  SportTypeArtistic_Swimming = 46,
  SportTypeSnorkeling = 47,
  SportTypeKitesurfing = 48,
  SportTypeOpen_Water_Swim = 49,
  SportTypeRock_Climbing = 50,
  SportTypeSkateboarding = 51,
  SportTypeRoller_Skating = 52,
  SportTypeParkour = 53,
  SportTypeATV = 54,
  SportTypeParagliding = 55,
  SportTypeTriathlon = 56,
  SportTypeStair_Climber = 57,
  SportTypeStair_Climbing = 58,
  SportTypeStepper = 59,
  SportTypeCore_Training = 60,
  SportTypeFlexibility = 61,
  SportTypePilates = 62,
  SportTypeGymnastics = 63,
  SportTypeStretching = 64,
  SportTypeStrength = 65,
  SportTypeCross_Training = 66,
  SportTypeAerobics = 67,
  SportTypePhysical_Training = 68,
  SportTypeWall_Ball = 69,
  SportTypeBarbell = 70,
  SportTypeDeadlift = 71,
  SportTypeUpperBody = 72,
  SportTypeFunctional_Training = 73,
  SportTypeBurpee = 74,
  SportTypeBack = 75,
  SportTypeLower_Body = 76,
  SportTypeAbs = 77,
  SportTypeHIIT = 78,
  SportTypeWeightlifting = 79,
  SportTypeSquare_Dancing = 80,
  SportTypeBelly_Dance = 81,
  SportTypeBallet = 82,
  SportTypeZumba = 83,
  SportTypeLatin_Dance = 84,
  SportTypeStreet_Dance = 85,
  SportTypeFolk_Dance = 86,
  SportTypeJazz_Dance = 87,
  SportTypeBoxing = 88,
  SportTypeWrestling = 89,
  SportTypeMartial_Arts = 90,
  SportTypeTai_Chi = 91,
  SportTypeMuay_Thai = 92,
  SportTypeJudo = 93,
  SportTypeTaekwondo = 94,
  SportTypeKarate = 95,
  SportTypeKickboxing = 96,
  SportTypeFencing = 97,
  SportTypeKendo = 98,
  SportTypeVolleyball = 99,
  SportTypeSoftball = 100,
  SportTypeHockey = 101,
  SportTypeTable_Tennis = 102,
  SportTypeHandball = 103,
  SportTypeSquash = 104,
  SportTypeBilliards = 105,
  SportTypeShuttlecock = 106,
  SportTypeBeach_Soccer = 107,
  SportTypeBeach_Volleyball = 108,
  SportTypeSepak_Takraw = 109,
  SportTypeIce_Skating = 110,
  SportTypeCurling = 111,
  SportTypeOther_Winter_Sports = 112,
  SportTypeSnowmobile = 113,
  SportTypeIce_Hockey = 114,
  SportTypeBobsleigh = 115,
  SportTypeSledding = 116,
  SportTypeArchery = 117,
  SportTypeDarts = 118,
  SportTypeTug_of_War = 119,
  SportTypeHula_Hoop = 120,
  SportTypeKite_Flying = 121,
  SportTypeHouse_Riding = 122,
  SportTypeFrisbee = 123,
  SportTypeFishing = 124,
  SportTypeEquestrian_Sports = 125,
  SportTypeAthletics = 126,
  SportTypeAuto_Racing = 127,
  SportTypeProceed = 253,
  SportTypePause = 254,
  SportTypeEnd = 255,
};


SWIFT_CLASS("_TtC12CRPSmartBand9StepModel")
@interface StepModel : NSObject
@property (nonatomic) NSInteger steps;
@property (nonatomic) NSInteger distance;
@property (nonatomic) NSInteger calory;
@property (nonatomic) NSInteger time;
- (nonnull instancetype)initWithSteps:(NSInteger)steps distance:(NSInteger)distance calory:(NSInteger)calory :(NSInteger)time OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC12CRPSmartBand19contactProfileModel")
@interface contactProfileModel : NSObject
@property (nonatomic) NSInteger contactMax;
@property (nonatomic) NSInteger contactAvatarWidth;
@property (nonatomic) NSInteger contactAvatarHeight;
@property (nonatomic) NSInteger contactNameLimit;
- (nonnull instancetype)initWithContactMax:(NSInteger)contactMax contactAvatarWidth:(NSInteger)contactAvatarWidth contactAvatarHeight:(NSInteger)contactAvatarHeight contactNameLimit:(NSInteger)contactNameLimit OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand16drinkWaterRemind")
@interface drinkWaterRemind : NSObject
@property (nonatomic) BOOL isRemind;
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger startMinute;
@property (nonatomic) NSInteger remindCount;
@property (nonatomic) NSInteger remindTimeInterval;
@property (nonatomic) NSInteger waterIntake;
- (nonnull instancetype)initWithIsRemind:(BOOL)isRemind startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute remindCount:(NSInteger)remindCount remindTimeInterval:(NSInteger)remindTimeInterval waterIntake:(NSInteger)waterIntake OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, ecgState, open) {
  ecgStateHandOn = 0,
  ecgStateHandout = 1,
  ecgStateFail = 2,
  ecgStateSyncSuccess = 3,
  ecgStateComplete = 4,
};


SWIFT_CLASS("_TtC12CRPSmartBand11eventRemind")
@interface eventRemind : NSObject
@property (nonatomic) BOOL isRemind;
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger startMinute;
@property (nonatomic) NSInteger remindCount;
@property (nonatomic) NSInteger remindTimeInterval;
- (nonnull instancetype)initWithIsRemind:(BOOL)isRemind startHour:(NSInteger)startHour startMinute:(NSInteger)startMinute remindCount:(NSInteger)remindCount remindTimeInterval:(NSInteger)remindTimeInterval OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand15forecastWeather")
@interface forecastWeather : NSObject
@property (nonatomic) NSInteger type;
@property (nonatomic) NSInteger maxTemp;
@property (nonatomic) NSInteger minTemp;
- (nonnull instancetype)initWithType:(NSInteger)type maxTemp:(NSInteger)maxTemp minTemp:(NSInteger)minTemp OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand8hrRemind")
@interface hrRemind : NSObject
@property (nonatomic) BOOL isRemind;
@property (nonatomic) NSInteger max;
- (nonnull instancetype)initWithIsRemind:(BOOL)isRemind max:(NSInteger)max OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum upgradeType : NSInteger;

SWIFT_CLASS("_TtC12CRPSmartBand14newVersionInfo")
@interface newVersionInfo : NSObject
@property (nonatomic) enum upgradeType type;
@property (nonatomic, copy) NSString * _Nullable version;
@property (nonatomic, copy) NSString * _Nullable log;
@property (nonatomic, copy) NSString * _Nullable logEN;
@property (nonatomic) NSInteger mcu;
@property (nonatomic, copy) NSString * _Nullable md5;
@property (nonatomic, copy) NSString * _Nullable fileUrl;
- (nonnull instancetype)initWithType:(enum upgradeType)type version:(NSString * _Nonnull)version log:(NSString * _Nonnull)log logEN:(NSString * _Nonnull)logEN mcu:(NSInteger)mcu md5:(NSString * _Nonnull)md5 fileUrl:(NSString * _Nonnull)fileUrl OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand16newVersionTpInfo")
@interface newVersionTpInfo : NSObject
@property (nonatomic, copy) NSString * _Nullable tp_path;
@property (nonatomic, copy) NSString * _Nullable tp_md5;
@property (nonatomic) NSInteger tp_offset;
- (nonnull instancetype)initWithTp_path:(NSString * _Nonnull)tp_path tp_md5:(NSString * _Nonnull)tp_md5 tp_offset:(NSInteger)tp_offset OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand15periodTimeModel")
@interface periodTimeModel : NSObject
@property (nonatomic) NSInteger startHour;
@property (nonatomic) NSInteger startMin;
@property (nonatomic) NSInteger endHour;
@property (nonatomic) NSInteger endMin;
- (nonnull instancetype)initWithStartHour:(NSInteger)startHour startMin:(NSInteger)startMin endHour:(NSInteger)endHour endMin:(NSInteger)endMin OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, reminderModel, open) {
  reminderModelMenstruation = 0,
  reminderModelOvulation = 1,
  reminderModelOvulationPeak = 2,
  reminderModelOvulationEnd = 3,
};

typedef SWIFT_ENUM(NSInteger, upgradeType, open) {
  upgradeTypeNormal = 0,
  upgradeTypeBate = 1,
  upgradeTypeForced = 2,
};


SWIFT_CLASS("_TtC12CRPSmartBand13watchFaceInfo")
@interface watchFaceInfo : NSObject
@property (nonatomic) NSInteger id;
@property (nonatomic) NSInteger model;
@property (nonatomic, copy) NSString * _Nonnull fileUrl;
@property (nonatomic, copy) NSString * _Nonnull imageUrl;
- (nonnull instancetype)initWithId:(NSInteger)id model:(NSInteger)model fileUrl:(NSString * _Nonnull)fileUrl imageUrl:(NSString * _Nonnull)imageUrl OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand21watchFaceSupportModel")
@interface watchFaceSupportModel : NSObject
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull supportModel;
@property (nonatomic) NSInteger currentID;
- (nonnull instancetype)initWithSupportModel:(NSArray<NSNumber *> * _Nonnull)supportModel currentID:(NSInteger)currentID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12CRPSmartBand7weather")
@interface weather : NSObject
@property (nonatomic) NSInteger type;
@property (nonatomic) NSInteger temp;
@property (nonatomic) NSInteger pm25;
@property (nonatomic, copy) NSString * _Nonnull festival;
@property (nonatomic, copy) NSString * _Nonnull city;
- (nonnull instancetype)initWithType:(NSInteger)type temp:(NSInteger)temp pm25:(NSInteger)pm25 festival:(NSString * _Nonnull)festival city:(NSString * _Nonnull)city OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
